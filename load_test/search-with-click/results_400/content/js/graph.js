/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 64130.0, "series": [{"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 8.0], [4.9, 8.0], [5.0, 8.0], [5.1, 8.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 9.0], [6.0, 9.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 10.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 15.0], [13.1, 16.0], [13.2, 16.0], [13.3, 16.0], [13.4, 16.0], [13.5, 16.0], [13.6, 16.0], [13.7, 16.0], [13.8, 16.0], [13.9, 16.0], [14.0, 17.0], [14.1, 17.0], [14.2, 17.0], [14.3, 17.0], [14.4, 17.0], [14.5, 17.0], [14.6, 17.0], [14.7, 17.0], [14.8, 17.0], [14.9, 18.0], [15.0, 18.0], [15.1, 18.0], [15.2, 18.0], [15.3, 18.0], [15.4, 18.0], [15.5, 18.0], [15.6, 18.0], [15.7, 18.0], [15.8, 18.0], [15.9, 19.0], [16.0, 19.0], [16.1, 19.0], [16.2, 19.0], [16.3, 19.0], [16.4, 19.0], [16.5, 19.0], [16.6, 19.0], [16.7, 19.0], [16.8, 20.0], [16.9, 20.0], [17.0, 20.0], [17.1, 20.0], [17.2, 20.0], [17.3, 20.0], [17.4, 20.0], [17.5, 20.0], [17.6, 20.0], [17.7, 21.0], [17.8, 21.0], [17.9, 21.0], [18.0, 21.0], [18.1, 21.0], [18.2, 21.0], [18.3, 21.0], [18.4, 21.0], [18.5, 21.0], [18.6, 22.0], [18.7, 22.0], [18.8, 22.0], [18.9, 22.0], [19.0, 22.0], [19.1, 22.0], [19.2, 22.0], [19.3, 22.0], [19.4, 22.0], [19.5, 23.0], [19.6, 23.0], [19.7, 23.0], [19.8, 23.0], [19.9, 23.0], [20.0, 23.0], [20.1, 23.0], [20.2, 23.0], [20.3, 23.0], [20.4, 24.0], [20.5, 24.0], [20.6, 24.0], [20.7, 24.0], [20.8, 24.0], [20.9, 24.0], [21.0, 24.0], [21.1, 24.0], [21.2, 24.0], [21.3, 25.0], [21.4, 25.0], [21.5, 25.0], [21.6, 25.0], [21.7, 25.0], [21.8, 25.0], [21.9, 25.0], [22.0, 25.0], [22.1, 26.0], [22.2, 26.0], [22.3, 26.0], [22.4, 26.0], [22.5, 26.0], [22.6, 26.0], [22.7, 26.0], [22.8, 26.0], [22.9, 26.0], [23.0, 27.0], [23.1, 27.0], [23.2, 27.0], [23.3, 27.0], [23.4, 27.0], [23.5, 27.0], [23.6, 27.0], [23.7, 27.0], [23.8, 28.0], [23.9, 28.0], [24.0, 28.0], [24.1, 28.0], [24.2, 28.0], [24.3, 28.0], [24.4, 28.0], [24.5, 28.0], [24.6, 29.0], [24.7, 29.0], [24.8, 29.0], [24.9, 29.0], [25.0, 29.0], [25.1, 29.0], [25.2, 29.0], [25.3, 29.0], [25.4, 30.0], [25.5, 30.0], [25.6, 30.0], [25.7, 30.0], [25.8, 30.0], [25.9, 30.0], [26.0, 30.0], [26.1, 30.0], [26.2, 31.0], [26.3, 31.0], [26.4, 31.0], [26.5, 31.0], [26.6, 31.0], [26.7, 31.0], [26.8, 31.0], [26.9, 31.0], [27.0, 31.0], [27.1, 32.0], [27.2, 32.0], [27.3, 32.0], [27.4, 32.0], [27.5, 32.0], [27.6, 32.0], [27.7, 32.0], [27.8, 32.0], [27.9, 33.0], [28.0, 33.0], [28.1, 33.0], [28.2, 33.0], [28.3, 33.0], [28.4, 33.0], [28.5, 33.0], [28.6, 33.0], [28.7, 34.0], [28.8, 34.0], [28.9, 34.0], [29.0, 34.0], [29.1, 34.0], [29.2, 34.0], [29.3, 34.0], [29.4, 34.0], [29.5, 34.0], [29.6, 35.0], [29.7, 35.0], [29.8, 35.0], [29.9, 35.0], [30.0, 35.0], [30.1, 35.0], [30.2, 35.0], [30.3, 35.0], [30.4, 36.0], [30.5, 36.0], [30.6, 36.0], [30.7, 36.0], [30.8, 36.0], [30.9, 36.0], [31.0, 36.0], [31.1, 36.0], [31.2, 37.0], [31.3, 37.0], [31.4, 37.0], [31.5, 37.0], [31.6, 37.0], [31.7, 37.0], [31.8, 37.0], [31.9, 37.0], [32.0, 37.0], [32.1, 38.0], [32.2, 38.0], [32.3, 38.0], [32.4, 38.0], [32.5, 38.0], [32.6, 38.0], [32.7, 38.0], [32.8, 39.0], [32.9, 39.0], [33.0, 39.0], [33.1, 39.0], [33.2, 39.0], [33.3, 39.0], [33.4, 39.0], [33.5, 39.0], [33.6, 40.0], [33.7, 40.0], [33.8, 40.0], [33.9, 40.0], [34.0, 40.0], [34.1, 40.0], [34.2, 40.0], [34.3, 40.0], [34.4, 41.0], [34.5, 41.0], [34.6, 41.0], [34.7, 41.0], [34.8, 41.0], [34.9, 41.0], [35.0, 41.0], [35.1, 41.0], [35.2, 42.0], [35.3, 42.0], [35.4, 42.0], [35.5, 42.0], [35.6, 42.0], [35.7, 42.0], [35.8, 42.0], [35.9, 42.0], [36.0, 43.0], [36.1, 43.0], [36.2, 43.0], [36.3, 43.0], [36.4, 43.0], [36.5, 43.0], [36.6, 43.0], [36.7, 44.0], [36.8, 44.0], [36.9, 44.0], [37.0, 44.0], [37.1, 44.0], [37.2, 44.0], [37.3, 44.0], [37.4, 44.0], [37.5, 45.0], [37.6, 45.0], [37.7, 45.0], [37.8, 45.0], [37.9, 45.0], [38.0, 45.0], [38.1, 45.0], [38.2, 45.0], [38.3, 46.0], [38.4, 46.0], [38.5, 46.0], [38.6, 46.0], [38.7, 46.0], [38.8, 46.0], [38.9, 46.0], [39.0, 46.0], [39.1, 47.0], [39.2, 47.0], [39.3, 47.0], [39.4, 47.0], [39.5, 47.0], [39.6, 47.0], [39.7, 47.0], [39.8, 48.0], [39.9, 48.0], [40.0, 48.0], [40.1, 48.0], [40.2, 48.0], [40.3, 48.0], [40.4, 48.0], [40.5, 48.0], [40.6, 49.0], [40.7, 49.0], [40.8, 49.0], [40.9, 49.0], [41.0, 49.0], [41.1, 49.0], [41.2, 49.0], [41.3, 49.0], [41.4, 50.0], [41.5, 50.0], [41.6, 50.0], [41.7, 50.0], [41.8, 50.0], [41.9, 50.0], [42.0, 50.0], [42.1, 51.0], [42.2, 51.0], [42.3, 51.0], [42.4, 51.0], [42.5, 51.0], [42.6, 51.0], [42.7, 51.0], [42.8, 51.0], [42.9, 52.0], [43.0, 52.0], [43.1, 52.0], [43.2, 52.0], [43.3, 52.0], [43.4, 52.0], [43.5, 52.0], [43.6, 53.0], [43.7, 53.0], [43.8, 53.0], [43.9, 53.0], [44.0, 53.0], [44.1, 53.0], [44.2, 53.0], [44.3, 53.0], [44.4, 54.0], [44.5, 54.0], [44.6, 54.0], [44.7, 54.0], [44.8, 54.0], [44.9, 54.0], [45.0, 54.0], [45.1, 54.0], [45.2, 55.0], [45.3, 55.0], [45.4, 55.0], [45.5, 55.0], [45.6, 55.0], [45.7, 55.0], [45.8, 55.0], [45.9, 56.0], [46.0, 56.0], [46.1, 56.0], [46.2, 56.0], [46.3, 56.0], [46.4, 56.0], [46.5, 56.0], [46.6, 56.0], [46.7, 57.0], [46.8, 57.0], [46.9, 57.0], [47.0, 57.0], [47.1, 57.0], [47.2, 57.0], [47.3, 57.0], [47.4, 58.0], [47.5, 58.0], [47.6, 58.0], [47.7, 58.0], [47.8, 58.0], [47.9, 58.0], [48.0, 58.0], [48.1, 59.0], [48.2, 59.0], [48.3, 59.0], [48.4, 59.0], [48.5, 59.0], [48.6, 59.0], [48.7, 59.0], [48.8, 60.0], [48.9, 60.0], [49.0, 60.0], [49.1, 60.0], [49.2, 60.0], [49.3, 60.0], [49.4, 60.0], [49.5, 61.0], [49.6, 61.0], [49.7, 61.0], [49.8, 61.0], [49.9, 61.0], [50.0, 61.0], [50.1, 61.0], [50.2, 62.0], [50.3, 62.0], [50.4, 62.0], [50.5, 62.0], [50.6, 62.0], [50.7, 62.0], [50.8, 62.0], [50.9, 62.0], [51.0, 63.0], [51.1, 63.0], [51.2, 63.0], [51.3, 63.0], [51.4, 63.0], [51.5, 63.0], [51.6, 63.0], [51.7, 64.0], [51.8, 64.0], [51.9, 64.0], [52.0, 64.0], [52.1, 64.0], [52.2, 64.0], [52.3, 64.0], [52.4, 65.0], [52.5, 65.0], [52.6, 65.0], [52.7, 65.0], [52.8, 65.0], [52.9, 65.0], [53.0, 65.0], [53.1, 66.0], [53.2, 66.0], [53.3, 66.0], [53.4, 66.0], [53.5, 66.0], [53.6, 66.0], [53.7, 66.0], [53.8, 67.0], [53.9, 67.0], [54.0, 67.0], [54.1, 67.0], [54.2, 67.0], [54.3, 67.0], [54.4, 68.0], [54.5, 68.0], [54.6, 68.0], [54.7, 68.0], [54.8, 68.0], [54.9, 68.0], [55.0, 68.0], [55.1, 69.0], [55.2, 69.0], [55.3, 69.0], [55.4, 69.0], [55.5, 69.0], [55.6, 69.0], [55.7, 69.0], [55.8, 70.0], [55.9, 70.0], [56.0, 70.0], [56.1, 70.0], [56.2, 70.0], [56.3, 70.0], [56.4, 70.0], [56.5, 71.0], [56.6, 71.0], [56.7, 71.0], [56.8, 71.0], [56.9, 71.0], [57.0, 71.0], [57.1, 71.0], [57.2, 72.0], [57.3, 72.0], [57.4, 72.0], [57.5, 72.0], [57.6, 72.0], [57.7, 72.0], [57.8, 73.0], [57.9, 73.0], [58.0, 73.0], [58.1, 73.0], [58.2, 73.0], [58.3, 73.0], [58.4, 73.0], [58.5, 74.0], [58.6, 74.0], [58.7, 74.0], [58.8, 74.0], [58.9, 74.0], [59.0, 74.0], [59.1, 74.0], [59.2, 75.0], [59.3, 75.0], [59.4, 75.0], [59.5, 75.0], [59.6, 75.0], [59.7, 75.0], [59.8, 76.0], [59.9, 76.0], [60.0, 76.0], [60.1, 76.0], [60.2, 76.0], [60.3, 76.0], [60.4, 76.0], [60.5, 77.0], [60.6, 77.0], [60.7, 77.0], [60.8, 77.0], [60.9, 77.0], [61.0, 77.0], [61.1, 78.0], [61.2, 78.0], [61.3, 78.0], [61.4, 78.0], [61.5, 78.0], [61.6, 78.0], [61.7, 79.0], [61.8, 79.0], [61.9, 79.0], [62.0, 79.0], [62.1, 79.0], [62.2, 79.0], [62.3, 79.0], [62.4, 80.0], [62.5, 80.0], [62.6, 80.0], [62.7, 80.0], [62.8, 80.0], [62.9, 80.0], [63.0, 81.0], [63.1, 81.0], [63.2, 81.0], [63.3, 81.0], [63.4, 81.0], [63.5, 81.0], [63.6, 82.0], [63.7, 82.0], [63.8, 82.0], [63.9, 82.0], [64.0, 82.0], [64.1, 82.0], [64.2, 83.0], [64.3, 83.0], [64.4, 83.0], [64.5, 83.0], [64.6, 83.0], [64.7, 83.0], [64.8, 83.0], [64.9, 84.0], [65.0, 84.0], [65.1, 84.0], [65.2, 84.0], [65.3, 84.0], [65.4, 84.0], [65.5, 85.0], [65.6, 85.0], [65.7, 85.0], [65.8, 85.0], [65.9, 85.0], [66.0, 85.0], [66.1, 86.0], [66.2, 86.0], [66.3, 86.0], [66.4, 86.0], [66.5, 86.0], [66.6, 86.0], [66.7, 87.0], [66.8, 87.0], [66.9, 87.0], [67.0, 87.0], [67.1, 87.0], [67.2, 87.0], [67.3, 88.0], [67.4, 88.0], [67.5, 88.0], [67.6, 88.0], [67.7, 88.0], [67.8, 88.0], [67.9, 89.0], [68.0, 89.0], [68.1, 89.0], [68.2, 89.0], [68.3, 89.0], [68.4, 90.0], [68.5, 90.0], [68.6, 90.0], [68.7, 90.0], [68.8, 90.0], [68.9, 90.0], [69.0, 91.0], [69.1, 91.0], [69.2, 91.0], [69.3, 91.0], [69.4, 91.0], [69.5, 92.0], [69.6, 92.0], [69.7, 92.0], [69.8, 92.0], [69.9, 92.0], [70.0, 92.0], [70.1, 93.0], [70.2, 93.0], [70.3, 93.0], [70.4, 93.0], [70.5, 93.0], [70.6, 94.0], [70.7, 94.0], [70.8, 94.0], [70.9, 94.0], [71.0, 94.0], [71.1, 94.0], [71.2, 95.0], [71.3, 95.0], [71.4, 95.0], [71.5, 95.0], [71.6, 95.0], [71.7, 96.0], [71.8, 96.0], [71.9, 96.0], [72.0, 96.0], [72.1, 96.0], [72.2, 97.0], [72.3, 97.0], [72.4, 97.0], [72.5, 97.0], [72.6, 97.0], [72.7, 97.0], [72.8, 98.0], [72.9, 98.0], [73.0, 98.0], [73.1, 98.0], [73.2, 98.0], [73.3, 99.0], [73.4, 99.0], [73.5, 99.0], [73.6, 99.0], [73.7, 99.0], [73.8, 100.0], [73.9, 100.0], [74.0, 100.0], [74.1, 100.0], [74.2, 100.0], [74.3, 100.0], [74.4, 101.0], [74.5, 101.0], [74.6, 101.0], [74.7, 101.0], [74.8, 101.0], [74.9, 102.0], [75.0, 102.0], [75.1, 102.0], [75.2, 102.0], [75.3, 102.0], [75.4, 103.0], [75.5, 103.0], [75.6, 103.0], [75.7, 103.0], [75.8, 103.0], [75.9, 104.0], [76.0, 104.0], [76.1, 104.0], [76.2, 104.0], [76.3, 104.0], [76.4, 105.0], [76.5, 105.0], [76.6, 105.0], [76.7, 105.0], [76.8, 105.0], [76.9, 106.0], [77.0, 106.0], [77.1, 106.0], [77.2, 106.0], [77.3, 107.0], [77.4, 107.0], [77.5, 107.0], [77.6, 107.0], [77.7, 107.0], [77.8, 108.0], [77.9, 108.0], [78.0, 108.0], [78.1, 108.0], [78.2, 108.0], [78.3, 109.0], [78.4, 109.0], [78.5, 109.0], [78.6, 109.0], [78.7, 110.0], [78.8, 110.0], [78.9, 110.0], [79.0, 110.0], [79.1, 110.0], [79.2, 111.0], [79.3, 111.0], [79.4, 111.0], [79.5, 111.0], [79.6, 112.0], [79.7, 112.0], [79.8, 112.0], [79.9, 112.0], [80.0, 112.0], [80.1, 113.0], [80.2, 113.0], [80.3, 113.0], [80.4, 113.0], [80.5, 114.0], [80.6, 114.0], [80.7, 114.0], [80.8, 114.0], [80.9, 114.0], [81.0, 115.0], [81.1, 115.0], [81.2, 115.0], [81.3, 115.0], [81.4, 116.0], [81.5, 116.0], [81.6, 116.0], [81.7, 116.0], [81.8, 116.0], [81.9, 117.0], [82.0, 117.0], [82.1, 117.0], [82.2, 117.0], [82.3, 118.0], [82.4, 118.0], [82.5, 118.0], [82.6, 119.0], [82.7, 119.0], [82.8, 119.0], [82.9, 119.0], [83.0, 120.0], [83.1, 120.0], [83.2, 120.0], [83.3, 120.0], [83.4, 121.0], [83.5, 121.0], [83.6, 121.0], [83.7, 121.0], [83.8, 122.0], [83.9, 122.0], [84.0, 122.0], [84.1, 122.0], [84.2, 123.0], [84.3, 123.0], [84.4, 123.0], [84.5, 124.0], [84.6, 124.0], [84.7, 124.0], [84.8, 124.0], [84.9, 125.0], [85.0, 125.0], [85.1, 125.0], [85.2, 126.0], [85.3, 126.0], [85.4, 126.0], [85.5, 126.0], [85.6, 127.0], [85.7, 127.0], [85.8, 127.0], [85.9, 127.0], [86.0, 128.0], [86.1, 128.0], [86.2, 128.0], [86.3, 129.0], [86.4, 129.0], [86.5, 129.0], [86.6, 130.0], [86.7, 130.0], [86.8, 130.0], [86.9, 130.0], [87.0, 131.0], [87.1, 131.0], [87.2, 131.0], [87.3, 132.0], [87.4, 132.0], [87.5, 132.0], [87.6, 133.0], [87.7, 133.0], [87.8, 133.0], [87.9, 134.0], [88.0, 134.0], [88.1, 134.0], [88.2, 135.0], [88.3, 135.0], [88.4, 135.0], [88.5, 136.0], [88.6, 136.0], [88.7, 137.0], [88.8, 137.0], [88.9, 137.0], [89.0, 138.0], [89.1, 138.0], [89.2, 138.0], [89.3, 139.0], [89.4, 139.0], [89.5, 139.0], [89.6, 140.0], [89.7, 140.0], [89.8, 141.0], [89.9, 141.0], [90.0, 142.0], [90.1, 142.0], [90.2, 142.0], [90.3, 143.0], [90.4, 143.0], [90.5, 144.0], [90.6, 144.0], [90.7, 144.0], [90.8, 145.0], [90.9, 145.0], [91.0, 146.0], [91.1, 146.0], [91.2, 147.0], [91.3, 147.0], [91.4, 148.0], [91.5, 148.0], [91.6, 148.0], [91.7, 149.0], [91.8, 149.0], [91.9, 150.0], [92.0, 150.0], [92.1, 151.0], [92.2, 151.0], [92.3, 152.0], [92.4, 152.0], [92.5, 153.0], [92.6, 153.0], [92.7, 154.0], [92.8, 154.0], [92.9, 155.0], [93.0, 155.0], [93.1, 156.0], [93.2, 156.0], [93.3, 157.0], [93.4, 158.0], [93.5, 158.0], [93.6, 159.0], [93.7, 159.0], [93.8, 160.0], [93.9, 161.0], [94.0, 161.0], [94.1, 162.0], [94.2, 163.0], [94.3, 163.0], [94.4, 164.0], [94.5, 165.0], [94.6, 165.0], [94.7, 166.0], [94.8, 167.0], [94.9, 167.0], [95.0, 168.0], [95.1, 169.0], [95.2, 170.0], [95.3, 171.0], [95.4, 171.0], [95.5, 172.0], [95.6, 173.0], [95.7, 174.0], [95.8, 175.0], [95.9, 176.0], [96.0, 177.0], [96.1, 178.0], [96.2, 179.0], [96.3, 180.0], [96.4, 181.0], [96.5, 182.0], [96.6, 184.0], [96.7, 185.0], [96.8, 186.0], [96.9, 187.0], [97.0, 188.0], [97.1, 190.0], [97.2, 191.0], [97.3, 193.0], [97.4, 194.0], [97.5, 196.0], [97.6, 198.0], [97.7, 199.0], [97.8, 201.0], [97.9, 203.0], [98.0, 205.0], [98.1, 207.0], [98.2, 209.0], [98.3, 211.0], [98.4, 213.0], [98.5, 215.0], [98.6, 218.0], [98.7, 221.0], [98.8, 224.0], [98.9, 227.0], [99.0, 230.0], [99.1, 235.0], [99.2, 239.0], [99.3, 244.0], [99.4, 250.0], [99.5, 257.0], [99.6, 266.0], [99.7, 275.0], [99.8, 289.0], [99.9, 316.0], [100.0, 1453.0]], "isOverall": false, "label": "GET title/:titleId", "isController": false}, {"data": [[0.0, 2.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 9.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 11.0], [2.5, 11.0], [2.6, 11.0], [2.7, 11.0], [2.8, 11.0], [2.9, 12.0], [3.0, 12.0], [3.1, 12.0], [3.2, 12.0], [3.3, 12.0], [3.4, 13.0], [3.5, 13.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 15.0], [5.0, 16.0], [5.1, 16.0], [5.2, 16.0], [5.3, 16.0], [5.4, 16.0], [5.5, 17.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 17.0], [6.0, 18.0], [6.1, 18.0], [6.2, 18.0], [6.3, 18.0], [6.4, 19.0], [6.5, 19.0], [6.6, 19.0], [6.7, 19.0], [6.8, 19.0], [6.9, 20.0], [7.0, 20.0], [7.1, 20.0], [7.2, 20.0], [7.3, 20.0], [7.4, 21.0], [7.5, 21.0], [7.6, 21.0], [7.7, 21.0], [7.8, 21.0], [7.9, 22.0], [8.0, 22.0], [8.1, 22.0], [8.2, 22.0], [8.3, 22.0], [8.4, 23.0], [8.5, 23.0], [8.6, 23.0], [8.7, 23.0], [8.8, 24.0], [8.9, 24.0], [9.0, 24.0], [9.1, 24.0], [9.2, 24.0], [9.3, 25.0], [9.4, 25.0], [9.5, 25.0], [9.6, 25.0], [9.7, 25.0], [9.8, 26.0], [9.9, 26.0], [10.0, 26.0], [10.1, 26.0], [10.2, 26.0], [10.3, 27.0], [10.4, 27.0], [10.5, 27.0], [10.6, 27.0], [10.7, 28.0], [10.8, 28.0], [10.9, 28.0], [11.0, 28.0], [11.1, 28.0], [11.2, 29.0], [11.3, 29.0], [11.4, 29.0], [11.5, 29.0], [11.6, 29.0], [11.7, 30.0], [11.8, 30.0], [11.9, 30.0], [12.0, 30.0], [12.1, 31.0], [12.2, 31.0], [12.3, 31.0], [12.4, 31.0], [12.5, 31.0], [12.6, 32.0], [12.7, 32.0], [12.8, 32.0], [12.9, 32.0], [13.0, 33.0], [13.1, 33.0], [13.2, 33.0], [13.3, 33.0], [13.4, 34.0], [13.5, 34.0], [13.6, 34.0], [13.7, 34.0], [13.8, 34.0], [13.9, 35.0], [14.0, 35.0], [14.1, 35.0], [14.2, 35.0], [14.3, 36.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 37.0], [14.8, 37.0], [14.9, 37.0], [15.0, 37.0], [15.1, 37.0], [15.2, 38.0], [15.3, 38.0], [15.4, 38.0], [15.5, 38.0], [15.6, 39.0], [15.7, 39.0], [15.8, 39.0], [15.9, 39.0], [16.0, 39.0], [16.1, 40.0], [16.2, 40.0], [16.3, 40.0], [16.4, 40.0], [16.5, 41.0], [16.6, 41.0], [16.7, 41.0], [16.8, 41.0], [16.9, 41.0], [17.0, 42.0], [17.1, 42.0], [17.2, 42.0], [17.3, 42.0], [17.4, 43.0], [17.5, 43.0], [17.6, 43.0], [17.7, 43.0], [17.8, 44.0], [17.9, 44.0], [18.0, 44.0], [18.1, 44.0], [18.2, 44.0], [18.3, 45.0], [18.4, 45.0], [18.5, 45.0], [18.6, 45.0], [18.7, 46.0], [18.8, 46.0], [18.9, 46.0], [19.0, 46.0], [19.1, 47.0], [19.2, 47.0], [19.3, 47.0], [19.4, 47.0], [19.5, 48.0], [19.6, 48.0], [19.7, 48.0], [19.8, 48.0], [19.9, 49.0], [20.0, 49.0], [20.1, 49.0], [20.2, 49.0], [20.3, 49.0], [20.4, 50.0], [20.5, 50.0], [20.6, 50.0], [20.7, 50.0], [20.8, 51.0], [20.9, 51.0], [21.0, 51.0], [21.1, 51.0], [21.2, 52.0], [21.3, 52.0], [21.4, 52.0], [21.5, 52.0], [21.6, 52.0], [21.7, 53.0], [21.8, 53.0], [21.9, 53.0], [22.0, 53.0], [22.1, 54.0], [22.2, 54.0], [22.3, 54.0], [22.4, 54.0], [22.5, 55.0], [22.6, 55.0], [22.7, 55.0], [22.8, 55.0], [22.9, 56.0], [23.0, 56.0], [23.1, 56.0], [23.2, 56.0], [23.3, 56.0], [23.4, 57.0], [23.5, 57.0], [23.6, 57.0], [23.7, 57.0], [23.8, 58.0], [23.9, 58.0], [24.0, 58.0], [24.1, 58.0], [24.2, 59.0], [24.3, 59.0], [24.4, 59.0], [24.5, 59.0], [24.6, 60.0], [24.7, 60.0], [24.8, 60.0], [24.9, 60.0], [25.0, 60.0], [25.1, 61.0], [25.2, 61.0], [25.3, 61.0], [25.4, 61.0], [25.5, 62.0], [25.6, 62.0], [25.7, 62.0], [25.8, 62.0], [25.9, 63.0], [26.0, 63.0], [26.1, 63.0], [26.2, 63.0], [26.3, 64.0], [26.4, 64.0], [26.5, 64.0], [26.6, 64.0], [26.7, 65.0], [26.8, 65.0], [26.9, 65.0], [27.0, 65.0], [27.1, 65.0], [27.2, 66.0], [27.3, 66.0], [27.4, 66.0], [27.5, 66.0], [27.6, 67.0], [27.7, 67.0], [27.8, 67.0], [27.9, 67.0], [28.0, 68.0], [28.1, 68.0], [28.2, 68.0], [28.3, 68.0], [28.4, 68.0], [28.5, 69.0], [28.6, 69.0], [28.7, 69.0], [28.8, 69.0], [28.9, 70.0], [29.0, 70.0], [29.1, 70.0], [29.2, 70.0], [29.3, 71.0], [29.4, 71.0], [29.5, 71.0], [29.6, 71.0], [29.7, 72.0], [29.8, 72.0], [29.9, 72.0], [30.0, 72.0], [30.1, 73.0], [30.2, 73.0], [30.3, 73.0], [30.4, 73.0], [30.5, 74.0], [30.6, 74.0], [30.7, 74.0], [30.8, 74.0], [30.9, 74.0], [31.0, 75.0], [31.1, 75.0], [31.2, 75.0], [31.3, 75.0], [31.4, 76.0], [31.5, 76.0], [31.6, 76.0], [31.7, 76.0], [31.8, 77.0], [31.9, 77.0], [32.0, 77.0], [32.1, 77.0], [32.2, 78.0], [32.3, 78.0], [32.4, 78.0], [32.5, 78.0], [32.6, 79.0], [32.7, 79.0], [32.8, 79.0], [32.9, 79.0], [33.0, 80.0], [33.1, 80.0], [33.2, 80.0], [33.3, 80.0], [33.4, 81.0], [33.5, 81.0], [33.6, 81.0], [33.7, 81.0], [33.8, 82.0], [33.9, 82.0], [34.0, 82.0], [34.1, 82.0], [34.2, 83.0], [34.3, 83.0], [34.4, 83.0], [34.5, 83.0], [34.6, 84.0], [34.7, 84.0], [34.8, 84.0], [34.9, 84.0], [35.0, 84.0], [35.1, 85.0], [35.2, 85.0], [35.3, 85.0], [35.4, 86.0], [35.5, 86.0], [35.6, 86.0], [35.7, 86.0], [35.8, 87.0], [35.9, 87.0], [36.0, 87.0], [36.1, 87.0], [36.2, 88.0], [36.3, 88.0], [36.4, 88.0], [36.5, 88.0], [36.6, 89.0], [36.7, 89.0], [36.8, 89.0], [36.9, 89.0], [37.0, 90.0], [37.1, 90.0], [37.2, 90.0], [37.3, 90.0], [37.4, 91.0], [37.5, 91.0], [37.6, 91.0], [37.7, 91.0], [37.8, 92.0], [37.9, 92.0], [38.0, 92.0], [38.1, 92.0], [38.2, 93.0], [38.3, 93.0], [38.4, 93.0], [38.5, 94.0], [38.6, 94.0], [38.7, 94.0], [38.8, 94.0], [38.9, 95.0], [39.0, 95.0], [39.1, 95.0], [39.2, 95.0], [39.3, 96.0], [39.4, 96.0], [39.5, 96.0], [39.6, 96.0], [39.7, 97.0], [39.8, 97.0], [39.9, 97.0], [40.0, 97.0], [40.1, 98.0], [40.2, 98.0], [40.3, 98.0], [40.4, 99.0], [40.5, 99.0], [40.6, 99.0], [40.7, 99.0], [40.8, 100.0], [40.9, 100.0], [41.0, 100.0], [41.1, 100.0], [41.2, 101.0], [41.3, 101.0], [41.4, 101.0], [41.5, 101.0], [41.6, 102.0], [41.7, 102.0], [41.8, 102.0], [41.9, 103.0], [42.0, 103.0], [42.1, 103.0], [42.2, 103.0], [42.3, 104.0], [42.4, 104.0], [42.5, 104.0], [42.6, 105.0], [42.7, 105.0], [42.8, 105.0], [42.9, 105.0], [43.0, 106.0], [43.1, 106.0], [43.2, 106.0], [43.3, 106.0], [43.4, 107.0], [43.5, 107.0], [43.6, 107.0], [43.7, 108.0], [43.8, 108.0], [43.9, 108.0], [44.0, 108.0], [44.1, 109.0], [44.2, 109.0], [44.3, 109.0], [44.4, 110.0], [44.5, 110.0], [44.6, 110.0], [44.7, 110.0], [44.8, 111.0], [44.9, 111.0], [45.0, 111.0], [45.1, 112.0], [45.2, 112.0], [45.3, 112.0], [45.4, 112.0], [45.5, 113.0], [45.6, 113.0], [45.7, 113.0], [45.8, 113.0], [45.9, 114.0], [46.0, 114.0], [46.1, 114.0], [46.2, 114.0], [46.3, 115.0], [46.4, 115.0], [46.5, 115.0], [46.6, 116.0], [46.7, 116.0], [46.8, 116.0], [46.9, 116.0], [47.0, 117.0], [47.1, 117.0], [47.2, 117.0], [47.3, 117.0], [47.4, 118.0], [47.5, 118.0], [47.6, 118.0], [47.7, 119.0], [47.8, 119.0], [47.9, 119.0], [48.0, 119.0], [48.1, 120.0], [48.2, 120.0], [48.3, 120.0], [48.4, 121.0], [48.5, 121.0], [48.6, 121.0], [48.7, 121.0], [48.8, 122.0], [48.9, 122.0], [49.0, 122.0], [49.1, 122.0], [49.2, 123.0], [49.3, 123.0], [49.4, 123.0], [49.5, 124.0], [49.6, 124.0], [49.7, 124.0], [49.8, 124.0], [49.9, 125.0], [50.0, 125.0], [50.1, 125.0], [50.2, 126.0], [50.3, 126.0], [50.4, 126.0], [50.5, 126.0], [50.6, 127.0], [50.7, 127.0], [50.8, 127.0], [50.9, 128.0], [51.0, 128.0], [51.1, 128.0], [51.2, 128.0], [51.3, 129.0], [51.4, 129.0], [51.5, 129.0], [51.6, 130.0], [51.7, 130.0], [51.8, 130.0], [51.9, 130.0], [52.0, 131.0], [52.1, 131.0], [52.2, 131.0], [52.3, 132.0], [52.4, 132.0], [52.5, 132.0], [52.6, 133.0], [52.7, 133.0], [52.8, 133.0], [52.9, 133.0], [53.0, 134.0], [53.1, 134.0], [53.2, 134.0], [53.3, 135.0], [53.4, 135.0], [53.5, 135.0], [53.6, 136.0], [53.7, 136.0], [53.8, 136.0], [53.9, 137.0], [54.0, 137.0], [54.1, 137.0], [54.2, 138.0], [54.3, 138.0], [54.4, 138.0], [54.5, 138.0], [54.6, 139.0], [54.7, 139.0], [54.8, 139.0], [54.9, 140.0], [55.0, 140.0], [55.1, 140.0], [55.2, 140.0], [55.3, 141.0], [55.4, 141.0], [55.5, 141.0], [55.6, 142.0], [55.7, 142.0], [55.8, 142.0], [55.9, 143.0], [56.0, 143.0], [56.1, 143.0], [56.2, 144.0], [56.3, 144.0], [56.4, 144.0], [56.5, 145.0], [56.6, 145.0], [56.7, 145.0], [56.8, 146.0], [56.9, 146.0], [57.0, 146.0], [57.1, 147.0], [57.2, 147.0], [57.3, 147.0], [57.4, 147.0], [57.5, 148.0], [57.6, 148.0], [57.7, 149.0], [57.8, 149.0], [57.9, 149.0], [58.0, 149.0], [58.1, 150.0], [58.2, 150.0], [58.3, 150.0], [58.4, 151.0], [58.5, 151.0], [58.6, 151.0], [58.7, 152.0], [58.8, 152.0], [58.9, 152.0], [59.0, 153.0], [59.1, 153.0], [59.2, 153.0], [59.3, 154.0], [59.4, 154.0], [59.5, 154.0], [59.6, 155.0], [59.7, 155.0], [59.8, 155.0], [59.9, 156.0], [60.0, 156.0], [60.1, 156.0], [60.2, 157.0], [60.3, 157.0], [60.4, 157.0], [60.5, 158.0], [60.6, 158.0], [60.7, 158.0], [60.8, 159.0], [60.9, 159.0], [61.0, 159.0], [61.1, 160.0], [61.2, 160.0], [61.3, 160.0], [61.4, 161.0], [61.5, 161.0], [61.6, 161.0], [61.7, 162.0], [61.8, 162.0], [61.9, 162.0], [62.0, 163.0], [62.1, 163.0], [62.2, 163.0], [62.3, 164.0], [62.4, 164.0], [62.5, 164.0], [62.6, 165.0], [62.7, 165.0], [62.8, 165.0], [62.9, 166.0], [63.0, 166.0], [63.1, 166.0], [63.2, 167.0], [63.3, 167.0], [63.4, 167.0], [63.5, 168.0], [63.6, 168.0], [63.7, 168.0], [63.8, 169.0], [63.9, 169.0], [64.0, 169.0], [64.1, 170.0], [64.2, 170.0], [64.3, 170.0], [64.4, 171.0], [64.5, 171.0], [64.6, 172.0], [64.7, 172.0], [64.8, 172.0], [64.9, 173.0], [65.0, 173.0], [65.1, 173.0], [65.2, 174.0], [65.3, 174.0], [65.4, 174.0], [65.5, 175.0], [65.6, 175.0], [65.7, 175.0], [65.8, 176.0], [65.9, 176.0], [66.0, 176.0], [66.1, 177.0], [66.2, 177.0], [66.3, 178.0], [66.4, 178.0], [66.5, 178.0], [66.6, 179.0], [66.7, 179.0], [66.8, 180.0], [66.9, 180.0], [67.0, 180.0], [67.1, 181.0], [67.2, 181.0], [67.3, 181.0], [67.4, 182.0], [67.5, 182.0], [67.6, 182.0], [67.7, 183.0], [67.8, 183.0], [67.9, 183.0], [68.0, 184.0], [68.1, 184.0], [68.2, 185.0], [68.3, 185.0], [68.4, 185.0], [68.5, 186.0], [68.6, 186.0], [68.7, 186.0], [68.8, 187.0], [68.9, 187.0], [69.0, 188.0], [69.1, 188.0], [69.2, 188.0], [69.3, 189.0], [69.4, 189.0], [69.5, 189.0], [69.6, 190.0], [69.7, 190.0], [69.8, 191.0], [69.9, 191.0], [70.0, 191.0], [70.1, 192.0], [70.2, 192.0], [70.3, 193.0], [70.4, 193.0], [70.5, 193.0], [70.6, 194.0], [70.7, 194.0], [70.8, 195.0], [70.9, 195.0], [71.0, 195.0], [71.1, 196.0], [71.2, 196.0], [71.3, 197.0], [71.4, 197.0], [71.5, 197.0], [71.6, 198.0], [71.7, 198.0], [71.8, 199.0], [71.9, 199.0], [72.0, 199.0], [72.1, 200.0], [72.2, 200.0], [72.3, 201.0], [72.4, 201.0], [72.5, 201.0], [72.6, 202.0], [72.7, 202.0], [72.8, 203.0], [72.9, 203.0], [73.0, 204.0], [73.1, 204.0], [73.2, 204.0], [73.3, 205.0], [73.4, 205.0], [73.5, 205.0], [73.6, 206.0], [73.7, 206.0], [73.8, 207.0], [73.9, 207.0], [74.0, 207.0], [74.1, 208.0], [74.2, 208.0], [74.3, 209.0], [74.4, 209.0], [74.5, 209.0], [74.6, 210.0], [74.7, 210.0], [74.8, 211.0], [74.9, 211.0], [75.0, 211.0], [75.1, 212.0], [75.2, 212.0], [75.3, 213.0], [75.4, 213.0], [75.5, 213.0], [75.6, 214.0], [75.7, 214.0], [75.8, 215.0], [75.9, 215.0], [76.0, 216.0], [76.1, 216.0], [76.2, 217.0], [76.3, 217.0], [76.4, 217.0], [76.5, 218.0], [76.6, 218.0], [76.7, 219.0], [76.8, 219.0], [76.9, 220.0], [77.0, 220.0], [77.1, 220.0], [77.2, 221.0], [77.3, 221.0], [77.4, 222.0], [77.5, 222.0], [77.6, 222.0], [77.7, 223.0], [77.8, 223.0], [77.9, 224.0], [78.0, 224.0], [78.1, 225.0], [78.2, 225.0], [78.3, 225.0], [78.4, 226.0], [78.5, 226.0], [78.6, 227.0], [78.7, 227.0], [78.8, 228.0], [78.9, 228.0], [79.0, 229.0], [79.1, 229.0], [79.2, 229.0], [79.3, 230.0], [79.4, 230.0], [79.5, 231.0], [79.6, 231.0], [79.7, 232.0], [79.8, 232.0], [79.9, 233.0], [80.0, 233.0], [80.1, 234.0], [80.2, 234.0], [80.3, 235.0], [80.4, 235.0], [80.5, 236.0], [80.6, 236.0], [80.7, 237.0], [80.8, 237.0], [80.9, 238.0], [81.0, 238.0], [81.1, 239.0], [81.2, 239.0], [81.3, 240.0], [81.4, 240.0], [81.5, 241.0], [81.6, 241.0], [81.7, 242.0], [81.8, 242.0], [81.9, 243.0], [82.0, 243.0], [82.1, 244.0], [82.2, 244.0], [82.3, 245.0], [82.4, 245.0], [82.5, 246.0], [82.6, 246.0], [82.7, 247.0], [82.8, 247.0], [82.9, 248.0], [83.0, 248.0], [83.1, 249.0], [83.2, 249.0], [83.3, 250.0], [83.4, 250.0], [83.5, 251.0], [83.6, 251.0], [83.7, 252.0], [83.8, 252.0], [83.9, 253.0], [84.0, 253.0], [84.1, 254.0], [84.2, 255.0], [84.3, 255.0], [84.4, 256.0], [84.5, 256.0], [84.6, 257.0], [84.7, 257.0], [84.8, 258.0], [84.9, 259.0], [85.0, 259.0], [85.1, 260.0], [85.2, 261.0], [85.3, 261.0], [85.4, 262.0], [85.5, 262.0], [85.6, 263.0], [85.7, 264.0], [85.8, 264.0], [85.9, 265.0], [86.0, 265.0], [86.1, 266.0], [86.2, 267.0], [86.3, 267.0], [86.4, 268.0], [86.5, 269.0], [86.6, 269.0], [86.7, 270.0], [86.8, 271.0], [86.9, 271.0], [87.0, 272.0], [87.1, 273.0], [87.2, 273.0], [87.3, 274.0], [87.4, 275.0], [87.5, 276.0], [87.6, 276.0], [87.7, 277.0], [87.8, 278.0], [87.9, 279.0], [88.0, 279.0], [88.1, 280.0], [88.2, 281.0], [88.3, 282.0], [88.4, 283.0], [88.5, 283.0], [88.6, 284.0], [88.7, 285.0], [88.8, 286.0], [88.9, 286.0], [89.0, 287.0], [89.1, 288.0], [89.2, 289.0], [89.3, 290.0], [89.4, 291.0], [89.5, 292.0], [89.6, 292.0], [89.7, 293.0], [89.8, 294.0], [89.9, 295.0], [90.0, 296.0], [90.1, 297.0], [90.2, 298.0], [90.3, 299.0], [90.4, 300.0], [90.5, 301.0], [90.6, 302.0], [90.7, 303.0], [90.8, 304.0], [90.9, 305.0], [91.0, 306.0], [91.1, 307.0], [91.2, 308.0], [91.3, 309.0], [91.4, 310.0], [91.5, 312.0], [91.6, 313.0], [91.7, 314.0], [91.8, 315.0], [91.9, 316.0], [92.0, 318.0], [92.1, 319.0], [92.2, 320.0], [92.3, 321.0], [92.4, 323.0], [92.5, 324.0], [92.6, 325.0], [92.7, 326.0], [92.8, 328.0], [92.9, 329.0], [93.0, 331.0], [93.1, 332.0], [93.2, 334.0], [93.3, 335.0], [93.4, 337.0], [93.5, 338.0], [93.6, 340.0], [93.7, 341.0], [93.8, 343.0], [93.9, 344.0], [94.0, 346.0], [94.1, 348.0], [94.2, 349.0], [94.3, 351.0], [94.4, 353.0], [94.5, 355.0], [94.6, 357.0], [94.7, 359.0], [94.8, 361.0], [94.9, 362.0], [95.0, 364.0], [95.1, 367.0], [95.2, 369.0], [95.3, 371.0], [95.4, 373.0], [95.5, 375.0], [95.6, 378.0], [95.7, 380.0], [95.8, 382.0], [95.9, 385.0], [96.0, 387.0], [96.1, 390.0], [96.2, 393.0], [96.3, 396.0], [96.4, 399.0], [96.5, 402.0], [96.6, 406.0], [96.7, 409.0], [96.8, 413.0], [96.9, 417.0], [97.0, 421.0], [97.1, 425.0], [97.2, 429.0], [97.3, 433.0], [97.4, 437.0], [97.5, 443.0], [97.6, 448.0], [97.7, 454.0], [97.8, 462.0], [97.9, 467.0], [98.0, 474.0], [98.1, 482.0], [98.2, 489.0], [98.3, 499.0], [98.4, 510.0], [98.5, 522.0], [98.6, 534.0], [98.7, 545.0], [98.8, 558.0], [98.9, 575.0], [99.0, 597.0], [99.1, 625.0], [99.2, 661.0], [99.3, 712.0], [99.4, 773.0], [99.5, 860.0], [99.6, 971.0], [99.7, 1180.0], [99.8, 1479.0], [99.9, 1876.0], [100.0, 64130.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 9.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 10.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 10.0], [8.1, 10.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 15.0], [11.9, 15.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 16.0], [12.8, 16.0], [12.9, 16.0], [13.0, 16.0], [13.1, 16.0], [13.2, 16.0], [13.3, 16.0], [13.4, 16.0], [13.5, 17.0], [13.6, 17.0], [13.7, 17.0], [13.8, 17.0], [13.9, 17.0], [14.0, 17.0], [14.1, 17.0], [14.2, 17.0], [14.3, 18.0], [14.4, 18.0], [14.5, 18.0], [14.6, 18.0], [14.7, 18.0], [14.8, 18.0], [14.9, 18.0], [15.0, 18.0], [15.1, 19.0], [15.2, 19.0], [15.3, 19.0], [15.4, 19.0], [15.5, 19.0], [15.6, 19.0], [15.7, 19.0], [15.8, 19.0], [15.9, 19.0], [16.0, 20.0], [16.1, 20.0], [16.2, 20.0], [16.3, 20.0], [16.4, 20.0], [16.5, 20.0], [16.6, 20.0], [16.7, 20.0], [16.8, 21.0], [16.9, 21.0], [17.0, 21.0], [17.1, 21.0], [17.2, 21.0], [17.3, 21.0], [17.4, 21.0], [17.5, 21.0], [17.6, 22.0], [17.7, 22.0], [17.8, 22.0], [17.9, 22.0], [18.0, 22.0], [18.1, 22.0], [18.2, 22.0], [18.3, 22.0], [18.4, 23.0], [18.5, 23.0], [18.6, 23.0], [18.7, 23.0], [18.8, 23.0], [18.9, 23.0], [19.0, 23.0], [19.1, 23.0], [19.2, 24.0], [19.3, 24.0], [19.4, 24.0], [19.5, 24.0], [19.6, 24.0], [19.7, 24.0], [19.8, 24.0], [19.9, 24.0], [20.0, 25.0], [20.1, 25.0], [20.2, 25.0], [20.3, 25.0], [20.4, 25.0], [20.5, 25.0], [20.6, 25.0], [20.7, 25.0], [20.8, 26.0], [20.9, 26.0], [21.0, 26.0], [21.1, 26.0], [21.2, 26.0], [21.3, 26.0], [21.4, 26.0], [21.5, 26.0], [21.6, 27.0], [21.7, 27.0], [21.8, 27.0], [21.9, 27.0], [22.0, 27.0], [22.1, 27.0], [22.2, 27.0], [22.3, 27.0], [22.4, 28.0], [22.5, 28.0], [22.6, 28.0], [22.7, 28.0], [22.8, 28.0], [22.9, 28.0], [23.0, 28.0], [23.1, 28.0], [23.2, 29.0], [23.3, 29.0], [23.4, 29.0], [23.5, 29.0], [23.6, 29.0], [23.7, 29.0], [23.8, 29.0], [23.9, 29.0], [24.0, 30.0], [24.1, 30.0], [24.2, 30.0], [24.3, 30.0], [24.4, 30.0], [24.5, 30.0], [24.6, 30.0], [24.7, 30.0], [24.8, 31.0], [24.9, 31.0], [25.0, 31.0], [25.1, 31.0], [25.2, 31.0], [25.3, 31.0], [25.4, 31.0], [25.5, 31.0], [25.6, 32.0], [25.7, 32.0], [25.8, 32.0], [25.9, 32.0], [26.0, 32.0], [26.1, 32.0], [26.2, 32.0], [26.3, 32.0], [26.4, 33.0], [26.5, 33.0], [26.6, 33.0], [26.7, 33.0], [26.8, 33.0], [26.9, 33.0], [27.0, 33.0], [27.1, 33.0], [27.2, 34.0], [27.3, 34.0], [27.4, 34.0], [27.5, 34.0], [27.6, 34.0], [27.7, 34.0], [27.8, 34.0], [27.9, 34.0], [28.0, 35.0], [28.1, 35.0], [28.2, 35.0], [28.3, 35.0], [28.4, 35.0], [28.5, 35.0], [28.6, 35.0], [28.7, 35.0], [28.8, 36.0], [28.9, 36.0], [29.0, 36.0], [29.1, 36.0], [29.2, 36.0], [29.3, 36.0], [29.4, 36.0], [29.5, 37.0], [29.6, 37.0], [29.7, 37.0], [29.8, 37.0], [29.9, 37.0], [30.0, 37.0], [30.1, 37.0], [30.2, 37.0], [30.3, 37.0], [30.4, 38.0], [30.5, 38.0], [30.6, 38.0], [30.7, 38.0], [30.8, 38.0], [30.9, 38.0], [31.0, 38.0], [31.1, 39.0], [31.2, 39.0], [31.3, 39.0], [31.4, 39.0], [31.5, 39.0], [31.6, 39.0], [31.7, 39.0], [31.8, 39.0], [31.9, 40.0], [32.0, 40.0], [32.1, 40.0], [32.2, 40.0], [32.3, 40.0], [32.4, 40.0], [32.5, 40.0], [32.6, 40.0], [32.7, 41.0], [32.8, 41.0], [32.9, 41.0], [33.0, 41.0], [33.1, 41.0], [33.2, 41.0], [33.3, 41.0], [33.4, 42.0], [33.5, 42.0], [33.6, 42.0], [33.7, 42.0], [33.8, 42.0], [33.9, 42.0], [34.0, 42.0], [34.1, 42.0], [34.2, 43.0], [34.3, 43.0], [34.4, 43.0], [34.5, 43.0], [34.6, 43.0], [34.7, 43.0], [34.8, 43.0], [34.9, 44.0], [35.0, 44.0], [35.1, 44.0], [35.2, 44.0], [35.3, 44.0], [35.4, 44.0], [35.5, 44.0], [35.6, 44.0], [35.7, 45.0], [35.8, 45.0], [35.9, 45.0], [36.0, 45.0], [36.1, 45.0], [36.2, 45.0], [36.3, 45.0], [36.4, 46.0], [36.5, 46.0], [36.6, 46.0], [36.7, 46.0], [36.8, 46.0], [36.9, 46.0], [37.0, 46.0], [37.1, 46.0], [37.2, 47.0], [37.3, 47.0], [37.4, 47.0], [37.5, 47.0], [37.6, 47.0], [37.7, 47.0], [37.8, 47.0], [37.9, 48.0], [38.0, 48.0], [38.1, 48.0], [38.2, 48.0], [38.3, 48.0], [38.4, 48.0], [38.5, 48.0], [38.6, 48.0], [38.7, 49.0], [38.8, 49.0], [38.9, 49.0], [39.0, 49.0], [39.1, 49.0], [39.2, 49.0], [39.3, 49.0], [39.4, 49.0], [39.5, 50.0], [39.6, 50.0], [39.7, 50.0], [39.8, 50.0], [39.9, 50.0], [40.0, 50.0], [40.1, 50.0], [40.2, 51.0], [40.3, 51.0], [40.4, 51.0], [40.5, 51.0], [40.6, 51.0], [40.7, 51.0], [40.8, 51.0], [40.9, 51.0], [41.0, 52.0], [41.1, 52.0], [41.2, 52.0], [41.3, 52.0], [41.4, 52.0], [41.5, 52.0], [41.6, 52.0], [41.7, 52.0], [41.8, 53.0], [41.9, 53.0], [42.0, 53.0], [42.1, 53.0], [42.2, 53.0], [42.3, 53.0], [42.4, 53.0], [42.5, 54.0], [42.6, 54.0], [42.7, 54.0], [42.8, 54.0], [42.9, 54.0], [43.0, 54.0], [43.1, 54.0], [43.2, 54.0], [43.3, 55.0], [43.4, 55.0], [43.5, 55.0], [43.6, 55.0], [43.7, 55.0], [43.8, 55.0], [43.9, 55.0], [44.0, 56.0], [44.1, 56.0], [44.2, 56.0], [44.3, 56.0], [44.4, 56.0], [44.5, 56.0], [44.6, 56.0], [44.7, 57.0], [44.8, 57.0], [44.9, 57.0], [45.0, 57.0], [45.1, 57.0], [45.2, 57.0], [45.3, 57.0], [45.4, 57.0], [45.5, 58.0], [45.6, 58.0], [45.7, 58.0], [45.8, 58.0], [45.9, 58.0], [46.0, 58.0], [46.1, 58.0], [46.2, 59.0], [46.3, 59.0], [46.4, 59.0], [46.5, 59.0], [46.6, 59.0], [46.7, 59.0], [46.8, 59.0], [46.9, 60.0], [47.0, 60.0], [47.1, 60.0], [47.2, 60.0], [47.3, 60.0], [47.4, 60.0], [47.5, 60.0], [47.6, 61.0], [47.7, 61.0], [47.8, 61.0], [47.9, 61.0], [48.0, 61.0], [48.1, 61.0], [48.2, 61.0], [48.3, 61.0], [48.4, 62.0], [48.5, 62.0], [48.6, 62.0], [48.7, 62.0], [48.8, 62.0], [48.9, 62.0], [49.0, 62.0], [49.1, 63.0], [49.2, 63.0], [49.3, 63.0], [49.4, 63.0], [49.5, 63.0], [49.6, 63.0], [49.7, 63.0], [49.8, 64.0], [49.9, 64.0], [50.0, 64.0], [50.1, 64.0], [50.2, 64.0], [50.3, 64.0], [50.4, 64.0], [50.5, 65.0], [50.6, 65.0], [50.7, 65.0], [50.8, 65.0], [50.9, 65.0], [51.0, 65.0], [51.1, 65.0], [51.2, 66.0], [51.3, 66.0], [51.4, 66.0], [51.5, 66.0], [51.6, 66.0], [51.7, 66.0], [51.8, 66.0], [51.9, 67.0], [52.0, 67.0], [52.1, 67.0], [52.2, 67.0], [52.3, 67.0], [52.4, 67.0], [52.5, 67.0], [52.6, 68.0], [52.7, 68.0], [52.8, 68.0], [52.9, 68.0], [53.0, 68.0], [53.1, 68.0], [53.2, 68.0], [53.3, 69.0], [53.4, 69.0], [53.5, 69.0], [53.6, 69.0], [53.7, 69.0], [53.8, 69.0], [53.9, 69.0], [54.0, 70.0], [54.1, 70.0], [54.2, 70.0], [54.3, 70.0], [54.4, 70.0], [54.5, 70.0], [54.6, 70.0], [54.7, 71.0], [54.8, 71.0], [54.9, 71.0], [55.0, 71.0], [55.1, 71.0], [55.2, 71.0], [55.3, 72.0], [55.4, 72.0], [55.5, 72.0], [55.6, 72.0], [55.7, 72.0], [55.8, 72.0], [55.9, 72.0], [56.0, 73.0], [56.1, 73.0], [56.2, 73.0], [56.3, 73.0], [56.4, 73.0], [56.5, 73.0], [56.6, 74.0], [56.7, 74.0], [56.8, 74.0], [56.9, 74.0], [57.0, 74.0], [57.1, 74.0], [57.2, 74.0], [57.3, 75.0], [57.4, 75.0], [57.5, 75.0], [57.6, 75.0], [57.7, 75.0], [57.8, 75.0], [57.9, 76.0], [58.0, 76.0], [58.1, 76.0], [58.2, 76.0], [58.3, 76.0], [58.4, 76.0], [58.5, 76.0], [58.6, 77.0], [58.7, 77.0], [58.8, 77.0], [58.9, 77.0], [59.0, 77.0], [59.1, 77.0], [59.2, 78.0], [59.3, 78.0], [59.4, 78.0], [59.5, 78.0], [59.6, 78.0], [59.7, 78.0], [59.8, 78.0], [59.9, 79.0], [60.0, 79.0], [60.1, 79.0], [60.2, 79.0], [60.3, 79.0], [60.4, 79.0], [60.5, 80.0], [60.6, 80.0], [60.7, 80.0], [60.8, 80.0], [60.9, 80.0], [61.0, 80.0], [61.1, 80.0], [61.2, 81.0], [61.3, 81.0], [61.4, 81.0], [61.5, 81.0], [61.6, 81.0], [61.7, 81.0], [61.8, 82.0], [61.9, 82.0], [62.0, 82.0], [62.1, 82.0], [62.2, 82.0], [62.3, 82.0], [62.4, 82.0], [62.5, 83.0], [62.6, 83.0], [62.7, 83.0], [62.8, 83.0], [62.9, 83.0], [63.0, 83.0], [63.1, 84.0], [63.2, 84.0], [63.3, 84.0], [63.4, 84.0], [63.5, 84.0], [63.6, 84.0], [63.7, 85.0], [63.8, 85.0], [63.9, 85.0], [64.0, 85.0], [64.1, 85.0], [64.2, 85.0], [64.3, 86.0], [64.4, 86.0], [64.5, 86.0], [64.6, 86.0], [64.7, 86.0], [64.8, 86.0], [64.9, 87.0], [65.0, 87.0], [65.1, 87.0], [65.2, 87.0], [65.3, 87.0], [65.4, 87.0], [65.5, 88.0], [65.6, 88.0], [65.7, 88.0], [65.8, 88.0], [65.9, 88.0], [66.0, 88.0], [66.1, 89.0], [66.2, 89.0], [66.3, 89.0], [66.4, 89.0], [66.5, 89.0], [66.6, 89.0], [66.7, 90.0], [66.8, 90.0], [66.9, 90.0], [67.0, 90.0], [67.1, 90.0], [67.2, 90.0], [67.3, 91.0], [67.4, 91.0], [67.5, 91.0], [67.6, 91.0], [67.7, 91.0], [67.8, 92.0], [67.9, 92.0], [68.0, 92.0], [68.1, 92.0], [68.2, 92.0], [68.3, 92.0], [68.4, 93.0], [68.5, 93.0], [68.6, 93.0], [68.7, 93.0], [68.8, 93.0], [68.9, 94.0], [69.0, 94.0], [69.1, 94.0], [69.2, 94.0], [69.3, 94.0], [69.4, 94.0], [69.5, 95.0], [69.6, 95.0], [69.7, 95.0], [69.8, 95.0], [69.9, 95.0], [70.0, 96.0], [70.1, 96.0], [70.2, 96.0], [70.3, 96.0], [70.4, 96.0], [70.5, 97.0], [70.6, 97.0], [70.7, 97.0], [70.8, 97.0], [70.9, 97.0], [71.0, 97.0], [71.1, 98.0], [71.2, 98.0], [71.3, 98.0], [71.4, 98.0], [71.5, 98.0], [71.6, 99.0], [71.7, 99.0], [71.8, 99.0], [71.9, 99.0], [72.0, 99.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 101.0], [72.7, 101.0], [72.8, 101.0], [72.9, 101.0], [73.0, 101.0], [73.1, 102.0], [73.2, 102.0], [73.3, 102.0], [73.4, 102.0], [73.5, 102.0], [73.6, 103.0], [73.7, 103.0], [73.8, 103.0], [73.9, 103.0], [74.0, 103.0], [74.1, 104.0], [74.2, 104.0], [74.3, 104.0], [74.4, 104.0], [74.5, 104.0], [74.6, 105.0], [74.7, 105.0], [74.8, 105.0], [74.9, 105.0], [75.0, 105.0], [75.1, 106.0], [75.2, 106.0], [75.3, 106.0], [75.4, 106.0], [75.5, 106.0], [75.6, 107.0], [75.7, 107.0], [75.8, 107.0], [75.9, 107.0], [76.0, 107.0], [76.1, 108.0], [76.2, 108.0], [76.3, 108.0], [76.4, 108.0], [76.5, 109.0], [76.6, 109.0], [76.7, 109.0], [76.8, 109.0], [76.9, 110.0], [77.0, 110.0], [77.1, 110.0], [77.2, 110.0], [77.3, 110.0], [77.4, 111.0], [77.5, 111.0], [77.6, 111.0], [77.7, 111.0], [77.8, 112.0], [77.9, 112.0], [78.0, 112.0], [78.1, 112.0], [78.2, 112.0], [78.3, 113.0], [78.4, 113.0], [78.5, 113.0], [78.6, 113.0], [78.7, 114.0], [78.8, 114.0], [78.9, 114.0], [79.0, 114.0], [79.1, 115.0], [79.2, 115.0], [79.3, 115.0], [79.4, 115.0], [79.5, 115.0], [79.6, 116.0], [79.7, 116.0], [79.8, 116.0], [79.9, 116.0], [80.0, 117.0], [80.1, 117.0], [80.2, 117.0], [80.3, 118.0], [80.4, 118.0], [80.5, 118.0], [80.6, 118.0], [80.7, 118.0], [80.8, 119.0], [80.9, 119.0], [81.0, 119.0], [81.1, 120.0], [81.2, 120.0], [81.3, 120.0], [81.4, 120.0], [81.5, 121.0], [81.6, 121.0], [81.7, 121.0], [81.8, 121.0], [81.9, 122.0], [82.0, 122.0], [82.1, 122.0], [82.2, 122.0], [82.3, 123.0], [82.4, 123.0], [82.5, 123.0], [82.6, 124.0], [82.7, 124.0], [82.8, 124.0], [82.9, 124.0], [83.0, 125.0], [83.1, 125.0], [83.2, 125.0], [83.3, 126.0], [83.4, 126.0], [83.5, 126.0], [83.6, 127.0], [83.7, 127.0], [83.8, 127.0], [83.9, 127.0], [84.0, 128.0], [84.1, 128.0], [84.2, 128.0], [84.3, 129.0], [84.4, 129.0], [84.5, 129.0], [84.6, 130.0], [84.7, 130.0], [84.8, 130.0], [84.9, 131.0], [85.0, 131.0], [85.1, 131.0], [85.2, 132.0], [85.3, 132.0], [85.4, 132.0], [85.5, 133.0], [85.6, 133.0], [85.7, 133.0], [85.8, 134.0], [85.9, 134.0], [86.0, 134.0], [86.1, 135.0], [86.2, 135.0], [86.3, 135.0], [86.4, 136.0], [86.5, 136.0], [86.6, 136.0], [86.7, 137.0], [86.8, 137.0], [86.9, 137.0], [87.0, 138.0], [87.1, 138.0], [87.2, 139.0], [87.3, 139.0], [87.4, 139.0], [87.5, 140.0], [87.6, 140.0], [87.7, 140.0], [87.8, 141.0], [87.9, 141.0], [88.0, 142.0], [88.1, 142.0], [88.2, 143.0], [88.3, 143.0], [88.4, 143.0], [88.5, 144.0], [88.6, 144.0], [88.7, 145.0], [88.8, 145.0], [88.9, 145.0], [89.0, 146.0], [89.1, 146.0], [89.2, 147.0], [89.3, 147.0], [89.4, 148.0], [89.5, 148.0], [89.6, 149.0], [89.7, 149.0], [89.8, 150.0], [89.9, 150.0], [90.0, 151.0], [90.1, 151.0], [90.2, 152.0], [90.3, 152.0], [90.4, 153.0], [90.5, 153.0], [90.6, 154.0], [90.7, 154.0], [90.8, 155.0], [90.9, 155.0], [91.0, 156.0], [91.1, 157.0], [91.2, 157.0], [91.3, 158.0], [91.4, 158.0], [91.5, 159.0], [91.6, 159.0], [91.7, 160.0], [91.8, 161.0], [91.9, 161.0], [92.0, 162.0], [92.1, 163.0], [92.2, 163.0], [92.3, 164.0], [92.4, 165.0], [92.5, 165.0], [92.6, 166.0], [92.7, 167.0], [92.8, 168.0], [92.9, 168.0], [93.0, 169.0], [93.1, 170.0], [93.2, 171.0], [93.3, 172.0], [93.4, 172.0], [93.5, 173.0], [93.6, 174.0], [93.7, 175.0], [93.8, 176.0], [93.9, 177.0], [94.0, 177.0], [94.1, 178.0], [94.2, 179.0], [94.3, 180.0], [94.4, 181.0], [94.5, 182.0], [94.6, 183.0], [94.7, 184.0], [94.8, 185.0], [94.9, 186.0], [95.0, 188.0], [95.1, 189.0], [95.2, 190.0], [95.3, 191.0], [95.4, 193.0], [95.5, 194.0], [95.6, 195.0], [95.7, 197.0], [95.8, 198.0], [95.9, 200.0], [96.0, 202.0], [96.1, 203.0], [96.2, 205.0], [96.3, 206.0], [96.4, 208.0], [96.5, 210.0], [96.6, 212.0], [96.7, 214.0], [96.8, 217.0], [96.9, 219.0], [97.0, 221.0], [97.1, 223.0], [97.2, 226.0], [97.3, 229.0], [97.4, 232.0], [97.5, 235.0], [97.6, 238.0], [97.7, 242.0], [97.8, 246.0], [97.9, 251.0], [98.0, 255.0], [98.1, 261.0], [98.2, 267.0], [98.3, 273.0], [98.4, 281.0], [98.5, 288.0], [98.6, 298.0], [98.7, 310.0], [98.8, 324.0], [98.9, 345.0], [99.0, 376.0], [99.1, 417.0], [99.2, 478.0], [99.3, 551.0], [99.4, 645.0], [99.5, 736.0], [99.6, 863.0], [99.7, 1003.0], [99.8, 1288.0], [99.9, 1652.0], [100.0, 18618.0]], "isOverall": false, "label": "GET search/:title", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 164504.0, "series": [{"data": [[0.0, 134628.0], [300.0, 239.0], [600.0, 1.0], [1400.0, 1.0], [100.0, 43655.0], [200.0, 3895.0], [400.0, 21.0], [800.0, 1.0], [500.0, 13.0]], "isOverall": false, "label": "GET title/:titleId", "isController": false}, {"data": [[0.0, 83673.0], [600.0, 554.0], [700.0, 302.0], [800.0, 231.0], [900.0, 161.0], [1000.0, 93.0], [1100.0, 91.0], [1200.0, 68.0], [1300.0, 67.0], [1400.0, 67.0], [1500.0, 81.0], [1600.0, 43.0], [1700.0, 44.0], [1800.0, 29.0], [1900.0, 23.0], [2000.0, 21.0], [2100.0, 19.0], [2200.0, 9.0], [2300.0, 5.0], [2400.0, 5.0], [2500.0, 7.0], [2600.0, 6.0], [2700.0, 3.0], [2800.0, 4.0], [3000.0, 1.0], [3100.0, 3.0], [3400.0, 1.0], [3600.0, 5.0], [3900.0, 1.0], [4100.0, 1.0], [4500.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [7900.0, 1.0], [8600.0, 1.0], [9100.0, 1.0], [9000.0, 4.0], [8900.0, 2.0], [9400.0, 2.0], [9300.0, 3.0], [10300.0, 1.0], [11000.0, 2.0], [11600.0, 1.0], [11500.0, 1.0], [11900.0, 1.0], [12100.0, 1.0], [12300.0, 1.0], [12500.0, 1.0], [12600.0, 3.0], [12700.0, 3.0], [13000.0, 1.0], [13300.0, 1.0], [12800.0, 1.0], [13600.0, 2.0], [13500.0, 2.0], [13400.0, 1.0], [13800.0, 3.0], [14300.0, 3.0], [14100.0, 1.0], [14800.0, 5.0], [14500.0, 3.0], [14400.0, 3.0], [14600.0, 1.0], [14700.0, 1.0], [15200.0, 2.0], [15100.0, 1.0], [14900.0, 2.0], [15000.0, 1.0], [16000.0, 1.0], [17400.0, 1.0], [17300.0, 1.0], [16700.0, 2.0], [16500.0, 1.0], [16800.0, 2.0], [17700.0, 2.0], [18200.0, 1.0], [17600.0, 1.0], [18100.0, 1.0], [18700.0, 1.0], [100.0, 64169.0], [29200.0, 1.0], [31000.0, 1.0], [32600.0, 1.0], [200.0, 37707.0], [64100.0, 1.0], [300.0, 12395.0], [400.0, 3895.0], [500.0, 1453.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 164504.0], [600.0, 260.0], [700.0, 195.0], [800.0, 182.0], [900.0, 157.0], [1000.0, 103.0], [1100.0, 73.0], [1200.0, 63.0], [1300.0, 69.0], [1400.0, 80.0], [1500.0, 49.0], [1600.0, 40.0], [1700.0, 27.0], [1800.0, 19.0], [1900.0, 23.0], [2000.0, 16.0], [2100.0, 13.0], [2300.0, 4.0], [2200.0, 4.0], [2400.0, 5.0], [2500.0, 4.0], [2600.0, 2.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [6400.0, 1.0], [7900.0, 1.0], [8600.0, 1.0], [8700.0, 2.0], [9000.0, 2.0], [9200.0, 4.0], [8800.0, 3.0], [8900.0, 3.0], [9100.0, 1.0], [9400.0, 1.0], [10200.0, 1.0], [10800.0, 2.0], [11500.0, 1.0], [11400.0, 1.0], [11800.0, 1.0], [12100.0, 1.0], [12300.0, 1.0], [12500.0, 1.0], [12600.0, 4.0], [12700.0, 4.0], [13000.0, 1.0], [13300.0, 2.0], [12800.0, 1.0], [13500.0, 4.0], [13400.0, 1.0], [13700.0, 2.0], [13600.0, 1.0], [13800.0, 1.0], [14300.0, 4.0], [14100.0, 1.0], [14700.0, 2.0], [14400.0, 5.0], [14500.0, 1.0], [14600.0, 3.0], [14800.0, 3.0], [15200.0, 2.0], [15100.0, 2.0], [14900.0, 2.0], [15900.0, 1.0], [16300.0, 1.0], [17400.0, 1.0], [17200.0, 1.0], [17300.0, 2.0], [16500.0, 2.0], [16400.0, 1.0], [17100.0, 1.0], [16700.0, 1.0], [16600.0, 1.0], [17600.0, 3.0], [18100.0, 1.0], [18600.0, 1.0], [100.0, 54319.0], [200.0, 6261.0], [300.0, 1012.0], [400.0, 398.0], [500.0, 266.0]], "isOverall": false, "label": "GET search/:title", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 64100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 47.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 408887.0, "series": [{"data": [[0.0, 408887.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1462.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 301.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 47.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 396.5707968800419, "minX": 1.7194887E12, "maxY": 400.0, "series": [{"data": [[1.71948912E12, 400.0], [1.71948882E12, 400.0], [1.7194893E12, 396.5707968800419], [1.719489E12, 400.0], [1.7194887E12, 400.0], [1.71948918E12, 400.0], [1.71948888E12, 400.0], [1.71948906E12, 400.0], [1.71948876E12, 400.0], [1.71948924E12, 400.0], [1.71948894E12, 400.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7194893E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 61.666666666666664, "minX": 1.0, "maxY": 12698.0, "series": [{"data": [[10.0, 80.0], [14.0, 74.0], [15.0, 90.0], [16.0, 91.0], [19.0, 88.0], [21.0, 83.0], [22.0, 146.0], [23.0, 147.0], [25.0, 137.0], [27.0, 147.0], [28.0, 141.0], [29.0, 141.0], [33.0, 116.0], [32.0, 124.0], [34.0, 113.0], [36.0, 109.0], [38.0, 107.0], [41.0, 99.0], [45.0, 89.0], [44.0, 92.0], [51.0, 253.0], [50.0, 197.0], [52.0, 238.0], [55.0, 253.0], [54.0, 205.0], [57.0, 134.0], [56.0, 236.0], [59.0, 136.0], [58.0, 141.0], [60.0, 134.0], [63.0, 126.0], [67.0, 118.0], [65.0, 121.0], [64.0, 121.0], [71.0, 114.0], [70.0, 116.0], [68.0, 117.0], [75.0, 109.0], [74.0, 110.0], [72.0, 111.0], [79.0, 102.0], [78.0, 102.0], [77.0, 106.0], [76.0, 107.0], [83.0, 199.0], [82.0, 188.0], [81.0, 99.0], [80.0, 100.0], [87.0, 163.0], [86.0, 164.0], [85.0, 116.0], [90.0, 158.0], [88.0, 159.0], [95.0, 138.0], [94.0, 140.0], [93.0, 148.0], [99.0, 123.0], [98.0, 126.0], [97.0, 129.0], [96.0, 133.0], [103.0, 151.0], [102.0, 107.0], [101.0, 118.0], [100.0, 122.0], [107.0, 146.0], [106.0, 149.0], [105.0, 157.0], [104.0, 158.0], [111.0, 138.0], [110.0, 140.0], [109.0, 142.0], [108.0, 143.0], [115.0, 122.0], [114.0, 132.0], [113.0, 134.0], [112.0, 136.0], [119.0, 112.0], [118.0, 113.0], [117.0, 115.0], [116.0, 121.0], [123.0, 197.0], [122.0, 197.0], [121.0, 200.0], [120.0, 200.0], [126.0, 178.0], [125.0, 191.0], [124.0, 193.0], [135.0, 219.0], [133.0, 142.0], [132.0, 145.0], [131.0, 160.0], [130.0, 161.0], [129.0, 161.0], [128.0, 163.0], [143.0, 189.0], [142.0, 194.0], [141.0, 196.0], [140.0, 206.0], [139.0, 208.0], [137.0, 210.0], [136.0, 218.0], [151.0, 153.0], [150.0, 165.0], [149.0, 166.0], [148.0, 166.0], [147.0, 168.0], [146.0, 170.0], [145.0, 176.0], [144.0, 184.0], [159.0, 216.0], [158.0, 215.0], [157.0, 219.0], [156.0, 199.0], [155.0, 140.0], [154.0, 148.0], [153.0, 151.0], [167.0, 174.0], [165.0, 181.0], [164.0, 189.0], [161.0, 205.0], [160.0, 207.0], [175.0, 218.0], [173.0, 153.0], [172.0, 163.0], [171.0, 165.0], [170.0, 169.0], [169.0, 169.0], [168.0, 173.0], [183.0, 191.0], [182.0, 199.0], [181.0, 201.0], [179.0, 210.0], [178.0, 213.0], [177.0, 216.0], [176.0, 217.0], [191.0, 154.0], [189.0, 164.0], [188.0, 166.0], [187.0, 171.0], [186.0, 175.0], [185.0, 188.0], [199.0, 255.0], [198.0, 128.0], [197.0, 137.0], [196.0, 145.0], [194.0, 151.0], [193.0, 151.0], [192.0, 152.0], [206.0, 253.0], [205.0, 248.0], [204.0, 246.0], [203.0, 249.0], [202.0, 260.0], [201.0, 251.0], [200.0, 259.0], [215.0, 198.0], [214.0, 200.0], [213.0, 205.0], [212.0, 209.0], [211.0, 210.0], [210.0, 213.0], [209.0, 216.0], [208.0, 243.0], [223.0, 169.0], [222.0, 170.0], [221.0, 182.0], [220.0, 185.0], [219.0, 187.0], [218.0, 195.0], [217.0, 195.0], [231.0, 182.0], [230.0, 193.0], [229.0, 195.0], [226.0, 151.0], [224.0, 166.0], [239.0, 208.0], [238.0, 205.0], [237.0, 199.0], [236.0, 177.0], [235.0, 189.0], [234.0, 190.0], [233.0, 186.0], [232.0, 183.0], [247.0, 177.0], [246.0, 179.0], [245.0, 181.0], [244.0, 184.0], [243.0, 186.0], [242.0, 189.0], [241.0, 200.0], [240.0, 202.0], [254.0, 210.0], [253.0, 206.0], [251.0, 203.0], [250.0, 158.0], [249.0, 165.0], [248.0, 167.0], [269.0, 173.0], [271.0, 166.0], [268.0, 175.0], [259.0, 206.0], [258.0, 209.0], [257.0, 209.0], [267.0, 186.0], [266.0, 188.0], [265.0, 190.0], [264.0, 193.0], [263.0, 195.0], [262.0, 198.0], [261.0, 202.0], [260.0, 203.0], [286.0, 196.0], [287.0, 177.0], [285.0, 198.0], [284.0, 200.0], [283.0, 246.0], [282.0, 252.0], [281.0, 273.0], [280.0, 256.0], [279.0, 282.0], [275.0, 155.0], [273.0, 159.0], [272.0, 161.0], [277.0, 147.0], [302.0, 180.0], [303.0, 179.0], [301.0, 182.0], [291.0, 184.0], [289.0, 152.0], [288.0, 170.0], [299.0, 195.0], [298.0, 195.0], [297.0, 200.0], [296.0, 203.0], [295.0, 207.0], [294.0, 211.0], [293.0, 209.0], [292.0, 200.0], [318.0, 180.0], [319.0, 180.0], [317.0, 185.0], [316.0, 186.0], [314.0, 195.0], [313.0, 198.0], [312.0, 202.0], [311.0, 201.0], [305.0, 205.0], [304.0, 177.0], [307.0, 179.0], [306.0, 207.0], [310.0, 177.0], [309.0, 179.0], [334.0, 134.0], [335.0, 134.0], [333.0, 133.0], [332.0, 131.0], [331.0, 130.0], [330.0, 131.0], [329.0, 218.0], [328.0, 212.0], [327.0, 212.0], [321.0, 176.0], [320.0, 179.0], [323.0, 150.0], [322.0, 161.0], [326.0, 212.0], [324.0, 143.0], [350.0, 101.0], [351.0, 77.0], [349.0, 99.0], [348.0, 127.0], [347.0, 127.0], [346.0, 130.0], [345.0, 132.0], [344.0, 172.0], [343.0, 100.0], [336.0, 133.0], [339.0, 138.0], [338.0, 138.0], [342.0, 102.0], [341.0, 107.0], [340.0, 125.0], [366.0, 108.0], [367.0, 102.0], [365.0, 85.0], [355.0, 96.0], [354.0, 104.0], [352.0, 75.0], [363.0, 88.0], [362.0, 90.0], [361.0, 93.0], [360.0, 93.0], [359.0, 100.0], [358.0, 101.0], [357.0, 90.0], [356.0, 94.0], [382.0, 68.0], [383.0, 64.0], [381.0, 73.0], [380.0, 76.0], [379.0, 77.0], [378.0, 80.0], [377.0, 80.0], [376.0, 85.0], [375.0, 92.0], [369.0, 95.0], [368.0, 99.0], [371.0, 86.0], [370.0, 93.0], [374.0, 74.0], [373.0, 81.0], [372.0, 82.0], [397.0, 64.5], [398.0, 73.0], [396.0, 75.0], [387.0, 105.0], [386.0, 104.0], [385.0, 100.0], [384.0, 100.0], [395.0, 75.0], [394.0, 84.0], [393.0, 88.0], [392.0, 90.0], [391.0, 90.0], [390.0, 76.0], [389.0, 106.0], [388.0, 97.0], [400.0, 70.90628466007077]], "isOverall": false, "label": "GET title/:titleId", "isController": false}, {"data": [[399.6693084284259, 71.06239928968424]], "isOverall": false, "label": "GET title/:titleId-Aggregated", "isController": false}, {"data": [[45.0, 372.0], [56.0, 419.0], [59.0, 261.0], [60.0, 261.0], [65.0, 489.0], [71.0, 286.0], [68.0, 268.0], [75.0, 108.0], [79.0, 290.0], [78.0, 291.0], [77.0, 291.0], [76.0, 291.0], [83.0, 413.0], [82.0, 569.0], [87.0, 303.0], [86.0, 299.0], [85.0, 413.0], [90.0, 316.0], [88.0, 522.0], [95.0, 331.0], [93.0, 234.0], [92.0, 148.0], [99.0, 334.0], [98.0, 330.0], [97.0, 516.0], [96.0, 333.0], [103.0, 347.0], [102.0, 334.0], [101.0, 333.0], [100.0, 336.0], [107.0, 305.0], [106.0, 305.0], [105.0, 303.0], [104.0, 303.0], [111.0, 316.0], [110.0, 306.0], [109.0, 319.0], [108.0, 304.0], [115.0, 339.0], [114.0, 323.0], [113.0, 322.0], [112.0, 319.0], [119.0, 343.0], [118.0, 319.0], [117.0, 330.0], [116.0, 494.0], [123.0, 344.0], [122.0, 346.0], [121.0, 336.0], [120.0, 330.0], [127.0, 165.0], [126.0, 356.0], [125.0, 352.0], [124.0, 350.0], [135.0, 411.0], [134.0, 169.0], [133.0, 365.0], [132.0, 366.0], [131.0, 356.0], [130.0, 357.0], [129.0, 355.0], [128.0, 355.0], [143.0, 339.0], [142.0, 334.0], [141.0, 336.0], [140.0, 300.0], [139.0, 402.0], [137.0, 405.0], [136.0, 607.0], [151.0, 370.0], [150.0, 346.0], [149.0, 346.0], [148.0, 345.0], [147.0, 584.0], [146.0, 594.0], [145.0, 336.0], [144.0, 342.0], [159.0, 373.0], [158.0, 374.0], [157.0, 381.0], [156.0, 394.0], [155.0, 388.0], [154.0, 233.5], [153.0, 370.0], [167.0, 369.0], [165.0, 568.0], [164.0, 546.0], [163.0, 368.0], [162.0, 216.0], [161.0, 376.0], [160.0, 377.0], [175.0, 354.0], [174.0, 223.0], [173.0, 525.0], [172.0, 282.0], [171.0, 362.0], [170.0, 374.0], [169.0, 579.0], [168.0, 371.0], [183.0, 369.0], [182.0, 366.0], [181.0, 363.0], [180.0, 203.0], [179.0, 541.0], [178.0, 354.0], [177.0, 354.0], [176.0, 347.0], [191.0, 379.0], [189.0, 379.0], [188.0, 374.0], [187.0, 375.0], [186.0, 534.0], [185.0, 277.5], [199.0, 451.0], [198.0, 303.5], [197.0, 439.0], [196.0, 315.0], [194.0, 378.0], [193.0, 382.0], [192.0, 387.0], [206.0, 438.0], [205.0, 444.0], [204.0, 488.0], [203.0, 445.0], [202.0, 444.0], [201.0, 566.0], [200.0, 458.0], [215.0, 355.0], [214.0, 351.0], [213.0, 350.0], [212.0, 409.0], [211.0, 420.0], [210.0, 422.0], [209.0, 425.0], [208.0, 374.0], [223.0, 540.0], [222.0, 412.0], [221.0, 368.0], [220.0, 392.0], [219.0, 389.0], [218.0, 279.0], [217.0, 356.0], [231.0, 379.0], [230.0, 435.0], [229.0, 1793.0], [228.0, 191.0], [227.0, 143.0], [226.0, 291.5], [224.0, 417.0], [239.0, 409.0], [238.0, 407.0], [237.0, 386.0], [236.0, 372.0], [235.0, 372.0], [234.0, 374.0], [233.0, 370.0], [232.0, 381.0], [247.0, 362.0], [246.0, 363.0], [245.0, 356.0], [244.0, 386.0], [243.0, 391.0], [242.0, 391.0], [241.0, 405.0], [240.0, 408.0], [254.0, 350.0], [253.0, 365.0], [252.0, 224.0], [251.0, 549.0], [250.0, 341.0], [249.0, 381.0], [248.0, 382.0], [270.0, 168.0], [271.0, 324.0], [269.0, 353.0], [268.0, 358.0], [267.0, 361.0], [266.0, 361.0], [265.0, 361.0], [264.0, 362.0], [263.0, 360.0], [257.0, 350.0], [259.0, 256.6666666666667], [258.0, 352.0], [262.0, 358.0], [261.0, 360.0], [260.0, 359.0], [286.0, 328.0], [287.0, 336.0], [285.0, 326.0], [284.0, 317.0], [283.0, 463.0], [282.0, 437.0], [281.0, 347.0], [280.0, 439.0], [279.0, 362.0], [272.0, 358.0], [275.0, 332.0], [273.0, 358.0], [278.0, 312.0], [277.0, 270.0], [302.0, 289.0], [303.0, 292.0], [301.0, 291.0], [291.0, 317.0], [290.0, 148.0], [289.0, 343.0], [288.0, 305.0], [299.0, 278.0], [298.0, 271.0], [297.0, 275.0], [296.0, 276.0], [295.0, 277.0], [294.0, 277.0], [293.0, 281.0], [292.0, 287.0], [318.0, 291.0], [319.0, 297.0], [317.0, 298.0], [316.0, 300.0], [315.0, 183.0], [314.0, 366.0], [313.0, 367.0], [312.0, 288.0], [311.0, 283.0], [305.0, 357.0], [304.0, 249.0], [307.0, 327.0], [306.0, 314.0], [310.0, 288.0], [309.0, 284.0], [308.0, 179.0], [334.0, 210.0], [335.0, 209.0], [333.0, 214.0], [332.0, 231.0], [331.0, 250.0], [330.0, 213.0], [329.0, 301.0], [328.0, 309.0], [327.0, 317.0], [321.0, 294.0], [320.0, 296.0], [323.0, 241.0], [322.0, 234.0], [326.0, 325.0], [325.0, 140.0], [324.0, 247.0], [350.0, 275.0], [351.0, 219.0], [349.0, 183.0], [348.0, 226.0], [347.0, 228.0], [346.0, 234.0], [345.0, 235.0], [344.0, 250.0], [343.0, 186.0], [337.0, 158.0], [336.0, 212.0], [339.0, 211.0], [338.0, 212.0], [342.0, 179.0], [341.0, 186.0], [340.0, 197.0], [366.0, 202.0], [367.0, 154.0], [365.0, 154.5], [355.0, 174.0], [354.0, 167.0], [353.0, 103.0], [352.0, 187.0], [363.0, 166.0], [362.0, 160.0], [361.0, 162.0], [360.0, 158.0], [359.0, 160.0], [358.0, 161.0], [357.0, 173.0], [356.0, 175.0], [382.0, 153.0], [383.0, 154.0], [381.0, 155.0], [380.0, 169.0], [379.0, 170.0], [378.0, 153.0], [377.0, 154.0], [376.0, 152.0], [375.0, 147.0], [369.0, 198.0], [368.0, 153.0], [371.0, 153.0], [370.0, 160.0], [374.0, 183.0], [373.0, 163.0], [372.0, 166.0], [397.0, 131.5], [398.0, 123.0], [396.0, 132.0], [387.0, 159.0], [386.0, 158.0], [385.0, 161.0], [384.0, 162.0], [395.0, 134.0], [394.0, 145.0], [393.0, 144.0], [392.0, 145.0], [391.0, 147.0], [390.0, 152.0], [389.0, 160.0], [388.0, 198.0], [400.0, 158.76839809945886]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[399.7382683700157, 159.01455769259084]], "isOverall": false, "label": "Transaction Controller-Aggregated", "isController": true}, {"data": [[2.0, 12698.0], [3.0, 1637.0], [14.0, 78.5], [16.0, 94.0], [17.0, 94.25], [18.0, 88.0], [20.0, 86.0], [21.0, 61.666666666666664], [25.0, 149.0], [27.0, 266.0], [30.0, 127.0], [32.0, 118.0], [38.0, 105.5], [41.0, 97.5], [45.0, 87.0], [47.0, 83.0], [46.0, 85.5], [49.0, 197.0], [48.0, 78.0], [53.0, 194.0], [63.0, 124.0], [65.0, 120.0], [71.0, 113.0], [75.0, 108.0], [83.0, 206.0], [84.0, 217.0], [91.0, 149.0], [93.0, 146.0], [92.0, 148.0], [103.0, 168.66666666666666], [102.0, 269.0], [101.0, 113.6], [100.0, 120.0], [107.0, 144.0], [106.0, 147.0], [113.0, 133.0], [119.0, 378.4], [121.0, 199.0], [127.0, 168.0], [126.0, 176.0], [125.0, 185.2], [124.0, 191.5], [134.0, 198.0], [133.0, 154.00000000000003], [132.0, 143.5], [131.0, 153.0], [130.0, 160.0], [143.0, 188.0], [142.0, 193.0], [140.0, 201.4], [136.0, 213.33333333333334], [150.0, 158.0], [145.0, 173.0], [157.0, 216.5], [156.0, 206.0], [155.0, 167.0], [154.0, 143.66666666666666], [166.0, 177.0], [165.0, 178.0], [164.0, 184.66666666666666], [163.0, 194.75], [162.0, 215.0], [160.0, 217.0], [161.0, 205.0], [174.0, 222.33333333333334], [173.0, 163.0], [172.0, 157.2], [170.0, 166.0], [182.0, 194.5], [180.0, 203.0], [189.0, 159.0], [185.0, 182.33333333333334], [198.0, 127.0], [197.0, 133.0], [196.0, 141.0], [195.0, 147.0], [194.0, 149.0], [206.0, 248.0], [208.0, 227.0], [221.0, 180.0], [218.0, 189.0], [229.0, 192.0], [228.0, 191.33333333333334], [227.0, 141.0], [226.0, 148.0], [224.0, 161.25], [239.0, 204.0], [238.0, 205.0], [236.0, 197.0], [235.0, 244.0], [232.0, 187.0], [247.0, 170.2], [244.0, 184.0], [241.0, 196.0], [253.0, 215.0], [252.0, 224.0], [251.0, 273.7142857142857], [250.0, 157.0], [249.0, 161.33333333333334], [271.0, 162.0], [270.0, 167.5], [267.0, 180.5], [264.0, 191.0], [259.0, 205.0], [258.0, 208.0], [287.0, 174.0], [283.0, 215.6], [282.0, 251.0], [280.0, 262.0], [279.0, 286.0], [278.0, 312.0], [277.0, 138.33333333333334], [276.0, 153.0], [300.0, 184.5], [299.0, 187.5], [295.0, 215.5], [291.0, 183.0], [290.0, 250.51999999999995], [289.0, 151.0], [288.0, 159.0], [312.0, 199.0], [315.0, 182.0], [314.0, 158.0], [313.0, 197.0], [310.0, 177.0], [304.0, 197.0], [309.0, 178.0], [308.0, 179.0], [306.0, 362.0], [305.0, 204.16666666666666], [331.0, 135.0], [325.0, 153.0], [324.0, 143.0], [322.0, 157.2], [321.0, 170.16666666666666], [351.0, 94.57142857142857], [350.0, 84.5], [348.0, 116.4], [349.0, 96.0], [344.0, 131.33333333333334], [340.0, 117.0], [339.0, 130.0], [337.0, 158.5], [367.0, 100.0], [366.0, 104.0], [365.0, 92.8], [363.0, 87.0], [359.0, 97.0], [357.0, 81.66666666666666], [354.0, 100.0], [353.0, 110.55555555555556], [352.0, 73.0], [383.0, 63.0], [378.0, 78.0], [376.0, 82.0], [374.0, 98.5], [373.0, 78.0], [371.0, 83.5], [368.0, 97.0], [397.0, 91.66666666666667], [396.0, 64.8], [394.0, 78.5], [385.0, 102.0], [400.0, 86.17766259074394], [1.0, 6428.0]], "isOverall": false, "label": "GET search/:title", "isController": false}, {"data": [[399.70811810219845, 86.40384590108026]], "isOverall": false, "label": "GET search/:title-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 15782.9, "minX": 1.7194887E12, "maxY": 625148.7333333333, "series": [{"data": [[1.71948912E12, 620288.6333333333], [1.71948882E12, 599055.55], [1.7194893E12, 522323.13333333336], [1.719489E12, 602785.7166666667], [1.7194887E12, 93309.33333333333], [1.71948918E12, 607191.1833333333], [1.71948888E12, 608351.4666666667], [1.71948906E12, 592028.9666666667], [1.71948876E12, 625148.7333333333], [1.71948924E12, 619283.6333333333], [1.71948894E12, 615099.2833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71948912E12, 105886.11666666667], [1.71948882E12, 102089.83333333333], [1.7194893E12, 89173.85], [1.719489E12, 102908.7], [1.7194887E12, 15782.9], [1.71948918E12, 103673.63333333333], [1.71948888E12, 103696.46666666666], [1.71948906E12, 100893.66666666667], [1.71948876E12, 106794.06666666667], [1.71948924E12, 105588.75], [1.71948894E12, 104878.91666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7194893E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 60.133429672446965, "minX": 1.7194887E12, "maxY": 199.70996083944226, "series": [{"data": [[1.71948912E12, 63.184907896154094], [1.71948882E12, 81.267287530671], [1.7194893E12, 66.34910068488757], [1.719489E12, 76.49149527515239], [1.7194887E12, 63.27986965966695], [1.71948918E12, 73.8374883055419], [1.71948888E12, 73.25135224638507], [1.71948906E12, 87.04513614280874], [1.71948876E12, 60.133429672446965], [1.71948924E12, 65.16370893791517], [1.71948894E12, 65.6865574127507]], "isOverall": false, "label": "GET title/:titleId", "isController": false}, {"data": [[1.71948912E12, 140.68520376475192], [1.71948882E12, 175.85981354755572], [1.7194893E12, 142.2774035167835], [1.719489E12, 172.5651788353537], [1.7194887E12, 181.7570967741931], [1.71948918E12, 167.27913252539165], [1.71948888E12, 166.48691150615363], [1.71948906E12, 199.70996083944226], [1.71948876E12, 130.78005139430906], [1.71948924E12, 144.1468427370947], [1.71948894E12, 147.53846153846104]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.71948912E12, 76.35538687138761], [1.71948882E12, 93.07493736578364], [1.7194893E12, 76.27718113940877], [1.719489E12, 95.11436040586587], [1.7194887E12, 114.01787258575959], [1.71948918E12, 91.68345957371795], [1.71948888E12, 91.48366271409726], [1.71948906E12, 108.82374230908435], [1.71948876E12, 69.50640532923391], [1.71948924E12, 77.04918458277409], [1.71948894E12, 80.7653504957388]], "isOverall": false, "label": "GET search/:title", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7194893E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 60.131716977092466, "minX": 1.7194887E12, "maxY": 199.70835425243533, "series": [{"data": [[1.71948912E12, 63.18383065819265], [1.71948882E12, 81.26639527102391], [1.7194893E12, 66.34814056199225], [1.719489E12, 76.49043913285153], [1.7194887E12, 63.276249094858734], [1.71948918E12, 73.83611248692972], [1.71948888E12, 73.24991720940575], [1.71948906E12, 87.04400632696844], [1.71948876E12, 60.131716977092466], [1.71948924E12, 65.1627380117586], [1.71948894E12, 65.68541405782112]], "isOverall": false, "label": "GET title/:titleId", "isController": false}, {"data": [[1.71948912E12, 140.6834838278158], [1.71948882E12, 175.85807795299021], [1.7194893E12, 142.27506279972496], [1.719489E12, 172.56345452753897], [1.7194887E12, 181.74999999999986], [1.71948918E12, 167.27658112948242], [1.71948888E12, 166.4850556749352], [1.71948906E12, 199.70835425243533], [1.71948876E12, 130.77743409155897], [1.71948924E12, 144.14516206482597], [1.71948894E12, 147.53643216080374]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.71948912E12, 76.35469679979285], [1.71948882E12, 93.07408732999205], [1.7194893E12, 76.27585148818658], [1.719489E12, 95.11365146882919], [1.7194887E12, 114.01412510810034], [1.71948918E12, 91.6822705654396], [1.71948888E12, 91.4831796223101], [1.71948906E12, 108.82319942091934], [1.71948876E12, 69.50550858314125], [1.71948924E12, 77.04844919323402], [1.71948894E12, 80.76443729344219]], "isOverall": false, "label": "GET search/:title", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7194893E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7194887E12, "maxY": 8.366129032258051, "series": [{"data": [[1.71948912E12, 1.615856942798661E-4], [1.71948882E12, 1.1153245594467966E-4], [1.7194893E12, 6.400819304871003E-5], [1.719489E12, 2.7793218454697064E-4], [1.7194887E12, 0.0], [1.71948918E12, 1.1006548896593425E-4], [1.71948888E12, 1.655811899768181E-4], [1.71948906E12, 2.2596316800361507E-4], [1.71948876E12, 2.1408691928923105E-4], [1.71948924E12, 2.157613679270718E-4], [1.71948894E12, 3.2667283715359007E-4]], "isOverall": false, "label": "GET title/:titleId", "isController": false}, {"data": [[1.71948912E12, 0.003917634131192958], [1.71948882E12, 0.00451254586928494], [1.7194893E12, 1.1418131993605792E-4], [1.719489E12, 0.0041876046901172595], [1.7194887E12, 8.366129032258051], [1.71948918E12, 0.0038761591678524217], [1.71948888E12, 0.0034186364524321088], [1.71948906E12, 0.0038156441409779966], [1.71948876E12, 0.0047111449509850516], [1.71948924E12, 0.004513805522208888], [1.71948894E12, 0.004252029377657521]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.71948912E12, 0.0034072284999568784], [1.71948882E12, 0.003981746599856842], [1.7194893E12, 5.114043162524258E-5], [1.719489E12, 0.0035889937524923574], [1.7194887E12, 7.476217930239242], [1.71948918E12, 0.0033908754623921135], [1.71948888E12, 0.0029424681598594674], [1.71948906E12, 0.0032120883098081874], [1.71948876E12, 0.004056708514817681], [1.71948924E12, 0.0038932387420512996], [1.71948894E12, 0.0035658375369629503]], "isOverall": false, "label": "GET search/:title", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7194893E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.7194887E12, "maxY": 18618.0, "series": [{"data": [[1.71948912E12, 16755.0], [1.71948882E12, 17464.0], [1.7194893E12, 14760.0], [1.719489E12, 16583.0], [1.7194887E12, 1576.0], [1.71948918E12, 17615.0], [1.71948888E12, 15923.0], [1.71948906E12, 18618.0], [1.71948876E12, 15202.0], [1.71948924E12, 14671.0], [1.71948894E12, 15131.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71948912E12, 2.0], [1.71948882E12, 2.0], [1.7194893E12, 2.0], [1.719489E12, 2.0], [1.7194887E12, 2.0], [1.71948918E12, 2.0], [1.71948888E12, 2.0], [1.71948906E12, 2.0], [1.71948876E12, 2.0], [1.71948924E12, 2.0], [1.71948894E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71948912E12, 149.0], [1.71948882E12, 140.0], [1.7194893E12, 127.0], [1.719489E12, 147.0], [1.7194887E12, 158.0], [1.71948918E12, 135.0], [1.71948888E12, 145.0], [1.71948906E12, 174.0], [1.71948876E12, 130.0], [1.71948924E12, 139.0], [1.71948894E12, 142.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71948912E12, 270.0], [1.71948882E12, 224.9900000000016], [1.7194893E12, 241.0], [1.719489E12, 379.9800000000032], [1.7194887E12, 802.3600000000006], [1.71948918E12, 447.9900000000016], [1.71948888E12, 311.9900000000016], [1.71948906E12, 567.9800000000032], [1.71948876E12, 229.0], [1.71948924E12, 258.9900000000016], [1.71948894E12, 409.9900000000016]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71948912E12, 57.0], [1.71948882E12, 60.0], [1.7194893E12, 56.0], [1.719489E12, 70.0], [1.7194887E12, 61.0], [1.71948918E12, 59.0], [1.71948888E12, 63.0], [1.71948906E12, 81.0], [1.71948876E12, 52.0], [1.71948924E12, 50.0], [1.71948894E12, 60.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71948912E12, 179.0], [1.71948882E12, 164.0], [1.7194893E12, 166.0], [1.719489E12, 178.0], [1.7194887E12, 212.39999999999964], [1.71948918E12, 187.0], [1.71948888E12, 188.0], [1.71948906E12, 206.0], [1.71948876E12, 157.0], [1.71948924E12, 176.95000000000073], [1.71948894E12, 174.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7194893E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 9563.0, "series": [{"data": [[341.0, 161.0], [507.0, 52.0], [525.0, 123.0], [531.0, 77.0], [524.0, 164.0], [574.0, 56.0], [548.0, 132.5], [564.0, 22.0], [575.0, 51.0], [569.0, 52.0], [570.0, 126.0], [565.0, 150.0], [557.0, 49.0], [554.0, 141.0], [547.0, 205.0], [578.0, 121.0], [603.0, 109.0], [581.0, 59.0], [579.0, 130.0], [601.0, 134.0], [600.0, 80.0], [607.0, 102.0], [591.0, 113.0], [596.0, 97.0], [599.0, 122.0], [598.0, 177.0], [595.0, 94.0], [588.0, 160.0], [586.0, 138.0], [587.0, 65.0], [585.0, 149.0], [577.0, 53.0], [589.0, 141.0], [592.0, 36.0], [635.0, 76.0], [610.0, 71.0], [631.0, 100.0], [623.0, 93.0], [609.0, 81.0], [622.0, 65.0], [621.0, 122.0], [619.0, 83.0], [620.0, 97.0], [617.0, 77.0], [616.0, 86.5], [630.0, 94.0], [618.0, 43.0], [615.0, 261.0], [612.0, 112.0], [611.0, 106.0], [633.0, 146.0], [632.0, 80.0], [634.0, 74.0], [628.0, 120.0], [627.0, 71.0], [629.0, 68.0], [626.0, 154.0], [624.0, 103.0], [625.0, 106.0], [638.0, 97.0], [637.0, 111.0], [639.0, 85.0], [645.0, 105.0], [656.0, 51.0], [659.0, 51.0], [657.0, 124.0], [658.0, 81.0], [652.0, 67.0], [661.0, 83.0], [663.0, 75.0], [662.0, 78.0], [660.0, 98.0], [651.0, 109.0], [650.0, 75.0], [670.0, 72.0], [646.0, 102.0], [647.0, 106.0], [664.0, 27.0], [667.0, 95.0], [669.0, 80.0], [668.0, 69.0], [665.0, 23.0], [671.0, 64.0], [648.0, 73.0], [649.0, 82.0], [653.0, 98.0], [654.0, 92.0], [640.0, 78.0], [641.0, 106.0], [644.0, 94.0], [643.0, 86.5], [642.0, 154.0], [655.0, 78.0], [697.0, 65.0], [690.0, 54.0], [694.0, 36.0], [695.0, 55.0], [686.0, 73.0], [687.0, 91.0], [685.0, 67.0], [696.0, 103.5], [677.0, 63.0], [678.0, 46.0], [676.0, 76.0], [673.0, 51.0], [674.0, 77.0], [675.0, 73.0], [679.0, 69.0], [693.0, 71.0], [692.0, 45.5], [691.0, 71.0], [672.0, 83.0], [682.0, 82.0], [680.0, 56.0], [681.0, 106.0], [683.0, 50.0], [684.0, 72.0], [688.0, 82.0], [689.0, 69.0], [702.0, 43.0], [700.0, 49.0], [701.0, 42.0], [698.0, 61.0], [699.0, 76.0], [703.0, 78.0], [709.0, 43.0], [734.0, 33.5], [723.0, 34.0], [725.0, 84.0], [724.0, 34.0], [727.0, 59.0], [726.0, 56.0], [716.0, 26.0], [706.0, 68.0], [715.0, 65.0], [713.0, 66.0], [712.0, 38.0], [714.0, 34.0], [710.0, 99.0], [732.0, 52.0], [733.0, 22.0], [728.0, 45.0], [729.0, 50.0], [731.0, 28.0], [730.0, 55.0], [711.0, 42.0], [708.0, 40.0], [707.0, 59.0], [718.0, 78.0], [717.0, 18.0], [704.0, 32.0], [705.0, 57.0], [719.0, 53.0], [735.0, 42.0], [720.0, 58.0], [721.0, 55.0], [722.0, 35.0], [766.0, 46.0], [741.0, 42.0], [764.0, 40.0], [761.0, 37.0], [763.0, 39.0], [762.0, 32.0], [742.0, 26.0], [743.0, 43.0], [738.0, 49.0], [739.0, 43.0], [740.0, 26.0], [758.0, 41.0], [759.0, 27.0], [757.0, 39.0], [765.0, 25.0], [756.0, 26.0], [746.0, 60.0], [744.0, 34.0], [745.0, 40.0], [747.0, 56.0], [750.0, 44.0], [749.0, 40.0], [748.0, 34.5], [751.0, 27.0], [737.0, 40.0], [736.0, 31.0], [754.0, 39.0], [752.0, 38.0], [753.0, 46.0], [767.0, 40.5], [755.0, 53.0], [769.0, 34.0], [786.0, 38.0], [776.0, 50.0], [783.0, 38.0], [768.0, 35.0], [779.0, 23.0], [781.0, 47.0], [795.0, 37.0], [773.0, 53.0], [772.0, 24.0], [770.0, 45.0], [771.0, 50.0], [775.0, 31.0], [778.0, 59.0], [774.0, 36.0], [1.0, 9563.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[591.0, 3.0], [589.0, 57.0], [600.0, 2.0], [587.0, 15.0], [623.0, 15.0], [638.0, 28.0], [617.0, 28.0], [628.0, 33.0], [612.0, 56.0], [639.0, 46.0], [619.0, 43.0], [621.0, 28.0], [622.0, 25.0], [627.0, 31.5], [651.0, 16.0], [641.0, 43.0], [656.0, 46.0], [653.0, 46.5], [645.0, 10.0], [650.0, 13.0], [684.0, 8.0], [691.0, 32.0], [676.0, 26.0], [677.0, 41.0], [706.0, 35.0], [704.0, 10.0], [719.0, 99.0], [727.0, 4.0], [723.0, 19.0], [730.0, 28.0], [756.0, 30.0], [757.0, 37.0], [754.0, 32.0], [749.0, 35.0], [763.0, 24.0], [766.0, 69.0], [761.0, 27.0], [774.0, 45.0], [770.0, 33.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 795.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 9563.0, "series": [{"data": [[341.0, 161.0], [507.0, 52.0], [525.0, 123.0], [531.0, 77.0], [524.0, 164.0], [574.0, 56.0], [548.0, 132.5], [564.0, 22.0], [575.0, 51.0], [569.0, 52.0], [570.0, 126.0], [565.0, 150.0], [557.0, 49.0], [554.0, 141.0], [547.0, 205.0], [578.0, 121.0], [603.0, 109.0], [581.0, 59.0], [579.0, 130.0], [601.0, 134.0], [600.0, 80.0], [607.0, 102.0], [591.0, 113.0], [596.0, 97.0], [599.0, 122.0], [598.0, 177.0], [595.0, 94.0], [588.0, 160.0], [586.0, 138.0], [587.0, 65.0], [585.0, 149.0], [577.0, 53.0], [589.0, 141.0], [592.0, 36.0], [635.0, 76.0], [610.0, 71.0], [631.0, 100.0], [623.0, 93.0], [609.0, 81.0], [622.0, 65.0], [621.0, 122.0], [619.0, 83.0], [620.0, 97.0], [617.0, 77.0], [616.0, 86.5], [630.0, 94.0], [618.0, 43.0], [615.0, 261.0], [612.0, 112.0], [611.0, 106.0], [633.0, 146.0], [632.0, 80.0], [634.0, 74.0], [628.0, 120.0], [627.0, 71.0], [629.0, 68.0], [626.0, 154.0], [624.0, 103.0], [625.0, 106.0], [638.0, 97.0], [637.0, 111.0], [639.0, 85.0], [645.0, 105.0], [656.0, 51.0], [659.0, 51.0], [657.0, 124.0], [658.0, 81.0], [652.0, 67.0], [661.0, 83.0], [663.0, 75.0], [662.0, 78.0], [660.0, 98.0], [651.0, 109.0], [650.0, 75.0], [670.0, 72.0], [646.0, 102.0], [647.0, 106.0], [664.0, 27.0], [667.0, 95.0], [669.0, 80.0], [668.0, 69.0], [665.0, 23.0], [671.0, 64.0], [648.0, 73.0], [649.0, 82.0], [653.0, 98.0], [654.0, 92.0], [640.0, 78.0], [641.0, 106.0], [644.0, 94.0], [643.0, 86.5], [642.0, 154.0], [655.0, 78.0], [697.0, 65.0], [690.0, 54.0], [694.0, 36.0], [695.0, 55.0], [686.0, 73.0], [687.0, 91.0], [685.0, 67.0], [696.0, 103.5], [677.0, 63.0], [678.0, 46.0], [676.0, 76.0], [673.0, 51.0], [674.0, 77.0], [675.0, 73.0], [679.0, 69.0], [693.0, 71.0], [692.0, 45.5], [691.0, 71.0], [672.0, 83.0], [682.0, 82.0], [680.0, 56.0], [681.0, 106.0], [683.0, 50.0], [684.0, 72.0], [688.0, 82.0], [689.0, 69.0], [702.0, 43.0], [700.0, 49.0], [701.0, 42.0], [698.0, 61.0], [699.0, 76.0], [703.0, 78.0], [709.0, 43.0], [734.0, 33.5], [723.0, 34.0], [725.0, 84.0], [724.0, 34.0], [727.0, 59.0], [726.0, 56.0], [716.0, 26.0], [706.0, 68.0], [715.0, 65.0], [713.0, 66.0], [712.0, 38.0], [714.0, 34.0], [710.0, 99.0], [732.0, 52.0], [733.0, 22.0], [728.0, 45.0], [729.0, 50.0], [731.0, 28.0], [730.0, 55.0], [711.0, 42.0], [708.0, 40.0], [707.0, 59.0], [718.0, 78.0], [717.0, 18.0], [704.0, 32.0], [705.0, 57.0], [719.0, 53.0], [735.0, 42.0], [720.0, 58.0], [721.0, 55.0], [722.0, 35.0], [766.0, 46.0], [741.0, 42.0], [764.0, 40.0], [761.0, 37.0], [763.0, 39.0], [762.0, 32.0], [742.0, 26.0], [743.0, 43.0], [738.0, 49.0], [739.0, 43.0], [740.0, 26.0], [758.0, 41.0], [759.0, 27.0], [757.0, 39.0], [765.0, 25.0], [756.0, 26.0], [746.0, 60.0], [744.0, 34.0], [745.0, 40.0], [747.0, 56.0], [750.0, 44.0], [749.0, 40.0], [748.0, 34.5], [751.0, 27.0], [737.0, 40.0], [736.0, 31.0], [754.0, 39.0], [752.0, 38.0], [753.0, 46.0], [767.0, 40.5], [755.0, 53.0], [769.0, 34.0], [786.0, 38.0], [776.0, 50.0], [783.0, 38.0], [768.0, 35.0], [779.0, 23.0], [781.0, 47.0], [795.0, 37.0], [773.0, 53.0], [772.0, 24.0], [770.0, 45.0], [771.0, 50.0], [775.0, 31.0], [778.0, 59.0], [774.0, 36.0], [1.0, 9563.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[591.0, 3.0], [589.0, 57.0], [600.0, 2.0], [587.0, 15.0], [623.0, 15.0], [638.0, 28.0], [617.0, 28.0], [628.0, 33.0], [612.0, 56.0], [639.0, 46.0], [619.0, 43.0], [621.0, 28.0], [622.0, 25.0], [627.0, 31.5], [651.0, 16.0], [641.0, 43.0], [656.0, 46.0], [653.0, 46.5], [645.0, 10.0], [650.0, 13.0], [684.0, 8.0], [691.0, 32.0], [676.0, 26.0], [677.0, 41.0], [706.0, 35.0], [704.0, 10.0], [719.0, 99.0], [727.0, 4.0], [723.0, 19.0], [730.0, 28.0], [756.0, 30.0], [757.0, 37.0], [754.0, 32.0], [749.0, 35.0], [763.0, 24.0], [766.0, 69.0], [761.0, 27.0], [774.0, 45.0], [770.0, 33.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 795.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 105.03333333333333, "minX": 1.7194887E12, "maxY": 702.25, "series": [{"data": [[1.71948912E12, 695.2333333333333], [1.71948882E12, 670.55], [1.7194893E12, 585.2], [1.719489E12, 675.85], [1.7194887E12, 105.03333333333333], [1.71948918E12, 682.25], [1.71948888E12, 681.5666666666667], [1.71948906E12, 663.2666666666667], [1.71948876E12, 702.25], [1.71948924E12, 694.2166666666667], [1.71948894E12, 689.5333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7194893E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.7194887E12, "maxY": 701.6333333333333, "series": [{"data": [[1.71948912E12, 695.7833333333333], [1.71948882E12, 671.3333333333334], [1.7194893E12, 586.2], [1.719489E12, 675.9166666666666], [1.7194887E12, 103.85], [1.71948918E12, 681.2333333333333], [1.71948888E12, 681.4], [1.71948906E12, 663.35], [1.71948876E12, 701.6333333333333], [1.71948924E12, 694.1833333333333], [1.71948894E12, 689.2833333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71948912E12, 0.08333333333333333], [1.71948882E12, 0.06666666666666667], [1.7194893E12, 0.08333333333333333], [1.719489E12, 0.06666666666666667], [1.71948918E12, 0.08333333333333333], [1.71948888E12, 0.06666666666666667], [1.71948906E12, 0.08333333333333333], [1.71948876E12, 0.06666666666666667], [1.71948924E12, 0.08333333333333333], [1.71948894E12, 0.1]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7194893E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.7194887E12, "maxY": 390.23333333333335, "series": [{"data": [[1.71948912E12, 386.35], [1.71948882E12, 372.46666666666664], [1.7194893E12, 325.81666666666666], [1.719489E12, 376.0833333333333], [1.7194887E12, 57.81666666666667], [1.71948918E12, 378.3833333333333], [1.71948888E12, 379.43333333333334], [1.71948906E12, 368.31666666666666], [1.71948876E12, 390.23333333333335], [1.71948924E12, 385.2], [1.71948894E12, 383.1666666666667]], "isOverall": false, "label": "GET search/:title-success", "isController": false}, {"data": [[1.71948912E12, 0.08333333333333333], [1.71948882E12, 0.06666666666666667], [1.7194893E12, 0.08333333333333333], [1.719489E12, 0.06666666666666667], [1.71948918E12, 0.08333333333333333], [1.71948888E12, 0.06666666666666667], [1.71948906E12, 0.08333333333333333], [1.71948876E12, 0.06666666666666667], [1.71948924E12, 0.08333333333333333], [1.71948894E12, 0.1]], "isOverall": false, "label": "GET search/:title-failure", "isController": false}, {"data": [[1.71948912E12, 348.78333333333336], [1.71948882E12, 336.03333333333336], [1.7194893E12, 291.8666666666667], [1.719489E12, 338.23333333333335], [1.7194887E12, 51.666666666666664], [1.71948918E12, 339.6166666666667], [1.71948888E12, 341.2], [1.71948906E12, 331.9], [1.71948876E12, 350.1666666666667], [1.71948924E12, 347.01666666666665], [1.71948894E12, 344.8666666666667]], "isOverall": false, "label": "Transaction Controller-success", "isController": true}, {"data": [[1.71948912E12, 0.06666666666666667], [1.71948882E12, 0.06666666666666667], [1.7194893E12, 0.06666666666666667], [1.719489E12, 0.06666666666666667], [1.71948918E12, 0.06666666666666667], [1.71948888E12, 0.06666666666666667], [1.71948906E12, 0.06666666666666667], [1.71948876E12, 0.06666666666666667], [1.71948924E12, 0.06666666666666667], [1.71948894E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction Controller-failure", "isController": true}, {"data": [[1.71948912E12, 309.43333333333334], [1.71948882E12, 298.8666666666667], [1.7194893E12, 260.3833333333333], [1.719489E12, 299.8333333333333], [1.7194887E12, 46.03333333333333], [1.71948918E12, 302.85], [1.71948888E12, 301.96666666666664], [1.71948906E12, 295.03333333333336], [1.71948876E12, 311.4], [1.71948924E12, 308.98333333333335], [1.71948894E12, 306.1166666666667]], "isOverall": false, "label": "GET title/:titleId-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7194893E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.7194887E12, "maxY": 1051.8, "series": [{"data": [[1.71948912E12, 1044.5666666666666], [1.71948882E12, 1007.3666666666667], [1.7194893E12, 878.0666666666667], [1.719489E12, 1014.15], [1.7194887E12, 155.51666666666668], [1.71948918E12, 1020.85], [1.71948888E12, 1022.6], [1.71948906E12, 995.25], [1.71948876E12, 1051.8], [1.71948924E12, 1041.2], [1.71948894E12, 1034.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71948912E12, 0.15], [1.71948882E12, 0.13333333333333333], [1.7194893E12, 0.15], [1.719489E12, 0.13333333333333333], [1.71948918E12, 0.15], [1.71948888E12, 0.13333333333333333], [1.71948906E12, 0.15], [1.71948876E12, 0.13333333333333333], [1.71948924E12, 0.15], [1.71948894E12, 0.16666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7194893E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

